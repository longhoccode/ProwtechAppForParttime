{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\CODESPACE\\\\prowtech-app\\\\frontend-web\\\\src\\\\pages\\\\StoreMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from \"@react-google-maps/api\";\nimport FilterBar from \"../components/FilterBar\";\nimport api from \"../services/api\";\nimport { provinces, districtMap } from \"../constants/locationData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_CENTER = {\n  lat: 10.7769,\n  lng: 106.7009\n};\nconst MAP_CONTAINER_STYLE = {\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"8px\"\n};\nfunction StoreMapPage() {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n  const [campaignStores, setCampaignStores] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [selectedStore, setSelectedStore] = useState(null);\n  const [filterValues, setFilterValues] = useState({\n    board: \"all\",\n    campaign: \"all\",\n    district: \"all\",\n    districtRaw: \"all\"\n  });\n  const mapRef = useRef(null);\n\n  // Load Google Maps\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  // EFFECT 1: Lấy Vị trí Người dùng (Geolocation)\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const newLocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(newLocation);\n        // Tùy chọn: Dịch chuyển bản đồ đến vị trí người dùng ngay khi tải\n        if (mapRef.current) {\n          mapRef.current.setCenter(newLocation);\n          mapRef.current.setZoom(14);\n        }\n      }, error => {\n        // Nếu người dùng từ chối hoặc có lỗi, giữ lại DEFAULT_CENTER\n        console.warn(\"Geolocation denied or error:\", error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, [isLoaded]); // Chạy sau khi Maps API được giả định là tải xong\n\n  // Fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([api.get(\"/stores\"), api.get(\"/campaigns\"), api.get(\"/campaigns/campaign-stores\")]);\n        setStores(resStores.data.data || []);\n        setCampaigns(resCampaigns.data.data || []);\n        setCampaignStores(resCampaignStores.data.data || []);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const onMapLoad = map => {\n    mapRef.current = map;\n  };\n  const handleReset = () => {\n    setFilterValues({\n      board: \"all\",\n      campaign: \"all\",\n      district: \"all\",\n      districtRaw: \"all\"\n    });\n    setSelectedStore(null);\n    if (mapRef.current) {\n      mapRef.current.setCenter(userLocation);\n      mapRef.current.setZoom(12);\n    }\n  };\n  const boardOptions = useMemo(() => [...new Set(stores.map(s => s.board_name))].sort(), [stores]);\n\n  // Build filters dynamically\n  const filters = useMemo(() => {\n    const baseFilters = [{\n      name: \"board\",\n      label: \"Chain\",\n      type: \"select\",\n      options: [\"Tất cả\", ...boardOptions]\n    }, {\n      name: \"campaign\",\n      label: \"Campaign\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...campaigns.map(c => ({\n        value: c.id,\n        label: c.name\n      }))]\n    }, {\n      name: \"district\",\n      label: \"Provinces\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...provinces.map(p => ({\n        value: p.value,\n        label: p.label\n      }))]\n    }];\n\n    // Quận/Huyện chỉ hiện khi đã chọn tỉnh\n    if (filterValues.district !== \"all\") {\n      var _districtMap$filterVa;\n      baseFilters.push({\n        name: \"districtRaw\",\n        label: \"District\",\n        type: \"select\",\n        options: [{\n          value: \"all\",\n          label: \"Tất cả\"\n        }, ...(((_districtMap$filterVa = districtMap[filterValues.district]) === null || _districtMap$filterVa === void 0 ? void 0 : _districtMap$filterVa.map(d => ({\n          value: d.value,\n          label: d.label\n        }))) || [])]\n      });\n    }\n    return baseFilters;\n  }, [boardOptions, campaigns, filterValues.district]);\n  const handleFilterChange = (name, value) => {\n    setFilterValues(prev => {\n      if (name === \"district\") return {\n        ...prev,\n        district: value,\n        districtRaw: \"all\"\n      };\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  const filteredStores = useMemo(() => {\n    return stores.filter(store => {\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\n      const campaignMatch = filterValues.campaign === \"all\" || campaignStores.some(cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id));\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\n    });\n  }, [stores, filterValues, campaignStores]);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"Error loading Google Maps: \", loadError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"Store Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      values: filterValues,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-lg mt-2\",\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: MAP_CONTAINER_STYLE,\n        center: userLocation,\n        zoom: 12,\n        onLoad: onMapLoad,\n        children: [filteredStores.map(store => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: Number(store.latitude),\n            lng: Number(store.longitude)\n          },\n          onClick: () => setSelectedStore(store)\n        }, store.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)), selectedStore && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: Number(selectedStore.latitude),\n            lng: Number(selectedStore.longitude)\n          },\n          onCloseClick: () => setSelectedStore(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStore.store_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address\",\n              children: selectedStore.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"board-name\",\n              children: [\"BOARD: \", selectedStore.board_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              \"aria-label\": `View ${selectedStore.store_code} on Google Maps`,\n              className: \"btn btn-outline btn-sm\",\n              children: \"View on Google Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(StoreMapPage, \"IXRsLcDz83IrzxAefgYvfAKaNog=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = StoreMapPage;\nexport default _c2 = /*#__PURE__*/memo(StoreMapPage);\nvar _c, _c2;\n$RefreshReg$(_c, \"StoreMapPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useRef","useEffect","GoogleMap","useJsApiLoader","InfoWindow","Marker","FilterBar","api","provinces","districtMap","jsxDEV","_jsxDEV","DEFAULT_CENTER","lat","lng","MAP_CONTAINER_STYLE","width","height","borderRadius","StoreMapPage","_s","stores","setStores","campaigns","setCampaigns","campaignStores","setCampaignStores","userLocation","setUserLocation","selectedStore","setSelectedStore","filterValues","setFilterValues","board","campaign","district","districtRaw","mapRef","isLoaded","loadError","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","navigator","geolocation","getCurrentPosition","position","newLocation","coords","latitude","longitude","current","setCenter","setZoom","error","console","warn","enableHighAccuracy","timeout","maximumAge","fetchData","resStores","resCampaigns","resCampaignStores","Promise","all","get","data","err","onMapLoad","map","handleReset","boardOptions","Set","s","board_name","sort","filters","baseFilters","name","label","type","options","value","c","p","_districtMap$filterVa","push","d","handleFilterChange","prev","filteredStores","filter","store","boardMatch","districtMatch","districtRawMatch","district_raw","campaignMatch","some","cs","String","campaign_id","store_id","style","color","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","values","onChange","onClick","mapContainerStyle","center","zoom","onLoad","Number","onCloseClick","store_code","address","href","target","rel","_c","_c2","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/pages/StoreMapPage.js"],"sourcesContent":["import React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from \"@react-google-maps/api\";\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport api from \"../services/api\";\r\nimport { provinces, districtMap } from \"../constants/locationData\";\r\n\r\nconst DEFAULT_CENTER = { lat: 10.7769, lng: 106.7009 };\r\nconst MAP_CONTAINER_STYLE = { width: \"100%\", height: \"100%\", borderRadius: \"8px\" };\r\n\r\nfunction StoreMapPage() {\r\n  const [stores, setStores] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [campaignStores, setCampaignStores] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null); \r\n\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  const [filterValues, setFilterValues] = useState({\r\n    board: \"all\",\r\n    campaign: \"all\",\r\n    district: \"all\",\r\n    districtRaw: \"all\",\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  // Load Google Maps\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n    // EFFECT 1: Lấy Vị trí Người dùng (Geolocation)\r\n    useEffect(() => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const newLocation = {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude,\r\n                    };\r\n                    setUserLocation(newLocation);\r\n                    // Tùy chọn: Dịch chuyển bản đồ đến vị trí người dùng ngay khi tải\r\n                    if (mapRef.current) {\r\n                        mapRef.current.setCenter(newLocation);\r\n                        mapRef.current.setZoom(14); \r\n                    }\r\n                },\r\n                (error) => {\r\n                    // Nếu người dùng từ chối hoặc có lỗi, giữ lại DEFAULT_CENTER\r\n                    console.warn(\"Geolocation denied or error:\", error);\r\n                },\r\n                { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n            );\r\n        }\r\n    }, [isLoaded]); // Chạy sau khi Maps API được giả định là tải xong\r\n\r\n  // Fetch data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([\r\n          api.get(\"/stores\"),\r\n          api.get(\"/campaigns\"),\r\n          api.get(\"/campaigns/campaign-stores\"),\r\n        ]);\r\n        setStores(resStores.data.data || []);\r\n        setCampaigns(resCampaigns.data.data || []);\r\n        setCampaignStores(resCampaignStores.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onMapLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilterValues({ board: \"all\", campaign: \"all\", district: \"all\", districtRaw: \"all\" });\r\n    setSelectedStore(null);\r\n    if (mapRef.current) {\r\n      mapRef.current.setCenter(userLocation);\r\n      mapRef.current.setZoom(12);\r\n    }\r\n  };\r\n\r\n  const boardOptions = useMemo(() => [...new Set(stores.map((s) => s.board_name))].sort(), [stores]);\r\n\r\n  // Build filters dynamically\r\n  const filters = useMemo(() => {\r\n    const baseFilters = [\r\n      { name: \"board\", label: \"Chain\", type: \"select\", options: [\"Tất cả\", ...boardOptions] },\r\n      {\r\n        name: \"campaign\",\r\n        label: \"Campaign\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...campaigns.map(c => ({ value: c.id, label: c.name }))],\r\n      },\r\n      {\r\n        name: \"district\",\r\n        label: \"Provinces\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...provinces.map(p => ({ value: p.value, label: p.label }))],\r\n      },\r\n    ];\r\n\r\n    // Quận/Huyện chỉ hiện khi đã chọn tỉnh\r\n    if (filterValues.district !== \"all\") {\r\n      baseFilters.push({\r\n        name: \"districtRaw\",\r\n        label: \"District\",\r\n        type: \"select\",\r\n        options: [\r\n          { value: \"all\", label: \"Tất cả\" },\r\n          ...(districtMap[filterValues.district]?.map(d => ({ value: d.value, label: d.label })) || []),\r\n        ],\r\n      });\r\n    }\r\n\r\n    return baseFilters;\r\n  }, [boardOptions, campaigns, filterValues.district]);\r\n\r\n  const handleFilterChange = (name, value) => {\r\n    setFilterValues(prev => {\r\n      if (name === \"district\") return { ...prev, district: value, districtRaw: \"all\" };\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const filteredStores = useMemo(() => {\r\n    return stores.filter(store => {\r\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\r\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\r\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\r\n      const campaignMatch =\r\n        filterValues.campaign === \"all\" ||\r\n        campaignStores.some(\r\n          cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id)\r\n        );\r\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\r\n    });\r\n  }, [stores, filterValues, campaignStores]);\r\n\r\n  if (loadError) return <div style={{ color: \"red\" }}>Error loading Google Maps: {loadError.message}</div>;\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"page-title\">Store Map</h2>\r\n      </div>\r\n\r\n      <FilterBar filters={filters} values={filterValues} onChange={handleFilterChange} />\r\n      <button className=\"btn btn-primary btn-lg mt-2\" onClick={handleReset}>Reset</button>\r\n\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={MAP_CONTAINER_STYLE}\r\n          center={userLocation}\r\n          zoom={12}\r\n          onLoad={onMapLoad}\r\n        >\r\n          {filteredStores.map(store => (\r\n            <Marker\r\n              key={store.id}\r\n              position={{ lat: Number(store.latitude), lng: Number(store.longitude) }}\r\n              onClick={() => setSelectedStore(store)}\r\n            />\r\n          ))}\r\n\r\n          {selectedStore && (\r\n            <InfoWindow\r\n              position={{ lat: Number(selectedStore.latitude), lng: Number(selectedStore.longitude) }}\r\n              onCloseClick={() => setSelectedStore(null)}\r\n            >\r\n            <div className=\"map-popup\">\r\n              {/* The Store Code as the primary title/identifier */}\r\n              <h3>{selectedStore.store_code}</h3>\r\n              \r\n              {/* Store Details */}\r\n              <p className=\"address\">{selectedStore.address}</p>\r\n              <p className=\"board-name\">BOARD: {selectedStore.board_name}</p>\r\n\r\n              {/* Corrected Google Maps Link and Button */}\r\n              <a \r\n                href={`https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`}\r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n                aria-label={`View ${selectedStore.store_code} on Google Maps`}\r\n                className=\"btn btn-outline btn-sm\"\r\n              >\r\n                  View on Google Maps\r\n              </a>\r\n            </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(StoreMapPage);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,SAAS,EAAEC,cAAc,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtF,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,SAAS,EAAEC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,GAAG;EAAEC,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAS,CAAC;AACtD,MAAMC,mBAAmB,GAAG;EAAEC,KAAK,EAAE,MAAM;EAAEC,MAAM,EAAE,MAAM;EAAEC,YAAY,EAAE;AAAM,CAAC;AAElF,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC;IAC/CmC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGrC,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM;IAAEsC,QAAQ;IAAEC;EAAU,CAAC,GAAGpC,cAAc,CAAC;IAC7CqC,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;EACA;EACA3C,SAAS,CAAC,MAAM;IACZ,IAAI4C,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,QAAQ,IAAK;QACV,MAAMC,WAAW,GAAG;UAChBpC,GAAG,EAAEmC,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAC7BrC,GAAG,EAAEkC,QAAQ,CAACE,MAAM,CAACE;QACzB,CAAC;QACDxB,eAAe,CAACqB,WAAW,CAAC;QAC5B;QACA,IAAIZ,MAAM,CAACgB,OAAO,EAAE;UAChBhB,MAAM,CAACgB,OAAO,CAACC,SAAS,CAACL,WAAW,CAAC;UACrCZ,MAAM,CAACgB,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;QAC9B;MACJ,CAAC,EACAC,KAAK,IAAK;QACP;QACAC,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEF,KAAK,CAAC;MACvD,CAAC,EACD;QAAEG,kBAAkB,EAAE,IAAI;QAAEC,OAAO,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAE,CAC7D,CAAC;IACL;EACJ,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElB;EACArC,SAAS,CAAC,MAAM;IACd,MAAM6D,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CAACC,SAAS,EAAEC,YAAY,EAAEC,iBAAiB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACrE5D,GAAG,CAAC6D,GAAG,CAAC,SAAS,CAAC,EAClB7D,GAAG,CAAC6D,GAAG,CAAC,YAAY,CAAC,EACrB7D,GAAG,CAAC6D,GAAG,CAAC,4BAA4B,CAAC,CACtC,CAAC;QACF9C,SAAS,CAACyC,SAAS,CAACM,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;QACpC7C,YAAY,CAACwC,YAAY,CAACK,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;QAC1C3C,iBAAiB,CAACuC,iBAAiB,CAACI,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;MACtD,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZb,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEc,GAAG,CAAC;MAC5C;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAIC,GAAG,IAAK;IACzBnC,MAAM,CAACgB,OAAO,GAAGmB,GAAG;EACtB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBzC,eAAe,CAAC;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAM,CAAC,CAAC;IACvFN,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIO,MAAM,CAACgB,OAAO,EAAE;MAClBhB,MAAM,CAACgB,OAAO,CAACC,SAAS,CAAC3B,YAAY,CAAC;MACtCU,MAAM,CAACgB,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;EAED,MAAMmB,YAAY,GAAG3E,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI4E,GAAG,CAACtD,MAAM,CAACmD,GAAG,CAAEI,CAAC,IAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,EAAE,CAACzD,MAAM,CAAC,CAAC;;EAElG;EACA,MAAM0D,OAAO,GAAGhF,OAAO,CAAC,MAAM;IAC5B,MAAMiF,WAAW,GAAG,CAClB;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAGV,YAAY;IAAE,CAAC,EACvF;MACEO,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEH,KAAK,EAAE;MAAS,CAAC,EAAE,GAAG3D,SAAS,CAACiD,GAAG,CAACc,CAAC,KAAK;QAAED,KAAK,EAAEC,CAAC,CAAC9C,EAAE;QAAE0C,KAAK,EAAEI,CAAC,CAACL;MAAK,CAAC,CAAC,CAAC;IACtG,CAAC,EACD;MACEA,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEH,KAAK,EAAE;MAAS,CAAC,EAAE,GAAG1E,SAAS,CAACgE,GAAG,CAACe,CAAC,KAAK;QAAEF,KAAK,EAAEE,CAAC,CAACF,KAAK;QAAEH,KAAK,EAAEK,CAAC,CAACL;MAAM,CAAC,CAAC,CAAC;IAC1G,CAAC,CACF;;IAED;IACA,IAAInD,YAAY,CAACI,QAAQ,KAAK,KAAK,EAAE;MAAA,IAAAqD,qBAAA;MACnCR,WAAW,CAACS,IAAI,CAAC;QACfR,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CACP;UAAEC,KAAK,EAAE,KAAK;UAAEH,KAAK,EAAE;QAAS,CAAC,EACjC,IAAI,EAAAM,qBAAA,GAAA/E,WAAW,CAACsB,YAAY,CAACI,QAAQ,CAAC,cAAAqD,qBAAA,uBAAlCA,qBAAA,CAAoChB,GAAG,CAACkB,CAAC,KAAK;UAAEL,KAAK,EAAEK,CAAC,CAACL,KAAK;UAAEH,KAAK,EAAEQ,CAAC,CAACR;QAAM,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC;MAEjG,CAAC,CAAC;IACJ;IAEA,OAAOF,WAAW;EACpB,CAAC,EAAE,CAACN,YAAY,EAAEnD,SAAS,EAAEQ,YAAY,CAACI,QAAQ,CAAC,CAAC;EAEpD,MAAMwD,kBAAkB,GAAGA,CAACV,IAAI,EAAEI,KAAK,KAAK;IAC1CrD,eAAe,CAAC4D,IAAI,IAAI;MACtB,IAAIX,IAAI,KAAK,UAAU,EAAE,OAAO;QAAE,GAAGW,IAAI;QAAEzD,QAAQ,EAAEkD,KAAK;QAAEjD,WAAW,EAAE;MAAM,CAAC;MAChF,OAAO;QAAE,GAAGwD,IAAI;QAAE,CAACX,IAAI,GAAGI;MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,cAAc,GAAG9F,OAAO,CAAC,MAAM;IACnC,OAAOsB,MAAM,CAACyE,MAAM,CAACC,KAAK,IAAI;MAC5B,MAAMC,UAAU,GAAGjE,YAAY,CAACE,KAAK,KAAK,KAAK,IAAI8D,KAAK,CAAClB,UAAU,KAAK9C,YAAY,CAACE,KAAK;MAC1F,MAAMgE,aAAa,GAAGlE,YAAY,CAACI,QAAQ,KAAK,KAAK,IAAI4D,KAAK,CAAC5D,QAAQ,KAAKJ,YAAY,CAACI,QAAQ;MACjG,MAAM+D,gBAAgB,GAAGnE,YAAY,CAACK,WAAW,KAAK,KAAK,IAAI2D,KAAK,CAACI,YAAY,KAAKpE,YAAY,CAACK,WAAW;MAC9G,MAAMgE,aAAa,GACjBrE,YAAY,CAACG,QAAQ,KAAK,KAAK,IAC/BT,cAAc,CAAC4E,IAAI,CACjBC,EAAE,IAAIC,MAAM,CAACD,EAAE,CAACE,WAAW,CAAC,KAAKD,MAAM,CAACxE,YAAY,CAACG,QAAQ,CAAC,IAAIqE,MAAM,CAACD,EAAE,CAACG,QAAQ,CAAC,KAAKF,MAAM,CAACR,KAAK,CAACvD,EAAE,CAC3G,CAAC;MACH,OAAOwD,UAAU,IAAIC,aAAa,IAAIC,gBAAgB,IAAIE,aAAa;IACzE,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/E,MAAM,EAAEU,YAAY,EAAEN,cAAc,CAAC,CAAC;EAE1C,IAAIc,SAAS,EAAE,oBAAO5B,OAAA;IAAK+F,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,GAAC,6BAA2B,EAACrE,SAAS,CAACsE,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACxG,IAAI,CAAC3E,QAAQ,EAAE,oBAAO3B,OAAA;IAAAiG,QAAA,EAAK;EAAc;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/C,oBACEtG,OAAA;IAAKuG,SAAS,EAAC,WAAW;IAAAN,QAAA,gBACxBjG,OAAA;MAAKuG,SAAS,EAAC,aAAa;MAAAN,QAAA,eAC1BjG,OAAA;QAAIuG,SAAS,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAENtG,OAAA,CAACL,SAAS;MAACyE,OAAO,EAAEA,OAAQ;MAACoC,MAAM,EAAEpF,YAAa;MAACqF,QAAQ,EAAEzB;IAAmB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFtG,OAAA;MAAQuG,SAAS,EAAC,6BAA6B;MAACG,OAAO,EAAE5C,WAAY;MAAAmC,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEpFtG,OAAA;MAAKuG,SAAS,EAAC,eAAe;MAAAN,QAAA,eAC5BjG,OAAA,CAACT,SAAS;QACRoH,iBAAiB,EAAEvG,mBAAoB;QACvCwG,MAAM,EAAE5F,YAAa;QACrB6F,IAAI,EAAE,EAAG;QACTC,MAAM,EAAElD,SAAU;QAAAqC,QAAA,GAEjBf,cAAc,CAACrB,GAAG,CAACuB,KAAK,iBACvBpF,OAAA,CAACN,MAAM;UAEL2C,QAAQ,EAAE;YAAEnC,GAAG,EAAE6G,MAAM,CAAC3B,KAAK,CAAC5C,QAAQ,CAAC;YAAErC,GAAG,EAAE4G,MAAM,CAAC3B,KAAK,CAAC3C,SAAS;UAAE,CAAE;UACxEiE,OAAO,EAAEA,CAAA,KAAMvF,gBAAgB,CAACiE,KAAK;QAAE,GAFlCA,KAAK,CAACvD,EAAE;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGd,CACF,CAAC,EAEDpF,aAAa,iBACZlB,OAAA,CAACP,UAAU;UACT4C,QAAQ,EAAE;YAAEnC,GAAG,EAAE6G,MAAM,CAAC7F,aAAa,CAACsB,QAAQ,CAAC;YAAErC,GAAG,EAAE4G,MAAM,CAAC7F,aAAa,CAACuB,SAAS;UAAE,CAAE;UACxFuE,YAAY,EAAEA,CAAA,KAAM7F,gBAAgB,CAAC,IAAI,CAAE;UAAA8E,QAAA,eAE7CjG,OAAA;YAAKuG,SAAS,EAAC,WAAW;YAAAN,QAAA,gBAExBjG,OAAA;cAAAiG,QAAA,EAAK/E,aAAa,CAAC+F;YAAU;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAGnCtG,OAAA;cAAGuG,SAAS,EAAC,SAAS;cAAAN,QAAA,EAAE/E,aAAa,CAACgG;YAAO;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClDtG,OAAA;cAAGuG,SAAS,EAAC,YAAY;cAAAN,QAAA,GAAC,SAAO,EAAC/E,aAAa,CAACgD,UAAU;YAAA;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAG/DtG,OAAA;cACEmH,IAAI,EAAE,8BAA8BjG,aAAa,CAACsB,QAAQ,IAAItB,aAAa,CAACuB,SAAS,EAAG;cACxF2E,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cACzB,cAAY,QAAQnG,aAAa,CAAC+F,UAAU,iBAAkB;cAC9DV,SAAS,EAAC,wBAAwB;cAAAN,QAAA,EACnC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7F,EAAA,CAjMQD,YAAY;EAAA,QAkBahB,cAAc;AAAA;AAAA8H,EAAA,GAlBvC9G,YAAY;AAmMrB,eAAA+G,GAAA,gBAAerI,IAAI,CAACsB,YAAY,CAAC;AAAC,IAAA8G,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}