{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3001/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// === Request Interceptor: tự động gắn token ===\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// === Response Interceptor: xử lý lỗi chung (401, 500, …) ===\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Nếu token hết hạn (401) và chưa retry\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry && localStorage.getItem(\"refreshToken\")) {\n    originalRequest._retry = true;\n    try {\n      // Gọi API refresh token\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      const res = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n        refreshToken\n      });\n      const newToken = res.data.token;\n      localStorage.setItem(\"token\", newToken);\n\n      // Gắn token mới vào headers và retry request cũ\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${newToken}`;\n      originalRequest.headers.Authorization = `Bearer ${newToken}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // Nếu refresh thất bại -> logout\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"refreshToken\");\n      window.location.href = \"/login\";\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","res","post","newToken","data","setItem","defaults","common","refreshError","removeItem","window","location","href"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:3001/api\";\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// === Request Interceptor: tự động gắn token ===\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// === Response Interceptor: xử lý lỗi chung (401, 500, …) ===\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Nếu token hết hạn (401) và chưa retry\r\n    if (\r\n      error.response?.status === 401 &&\r\n      !originalRequest._retry &&\r\n      localStorage.getItem(\"refreshToken\")\r\n    ) {\r\n      originalRequest._retry = true;\r\n      try {\r\n        // Gọi API refresh token\r\n        const refreshToken = localStorage.getItem(\"refreshToken\");\r\n        const res = await axios.post(`${API_BASE_URL}/auth/refresh`, {\r\n          refreshToken,\r\n        });\r\n\r\n        const newToken = res.data.token;\r\n        localStorage.setItem(\"token\", newToken);\r\n\r\n        // Gắn token mới vào headers và retry request cũ\r\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${newToken}`;\r\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Nếu refresh thất bại -> logout\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAChBC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;AAEnE,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAAM;;EAEpC;EACA,IACE,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAC9B,CAACD,eAAe,CAACE,MAAM,IACvBV,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EACpC;IACAO,eAAe,CAACE,MAAM,GAAG,IAAI;IAC7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,MAAMW,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,GAAG1B,YAAY,eAAe,EAAE;QAC3DwB;MACF,CAAC,CAAC;MAEF,MAAMG,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAAChB,KAAK;MAC/BC,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;;MAEvC;MACAvB,GAAG,CAAC0B,QAAQ,CAACvB,OAAO,CAACwB,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUJ,QAAQ,EAAE;MACnEN,eAAe,CAACd,OAAO,CAACQ,aAAa,GAAG,UAAUY,QAAQ,EAAE;MAC5D,OAAOvB,GAAG,CAACiB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOW,YAAY,EAAE;MACrB;MACAnB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;MAChCpB,YAAY,CAACoB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF;EAEA,OAAOnB,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}