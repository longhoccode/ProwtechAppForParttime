{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\CODESPACE\\\\prowtech-app\\\\frontend-web\\\\src\\\\components\\\\FilterBar.js\";\n// src/components/FilterBar.jsx\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterBar({\n  filters,\n  values,\n  onChange,\n  onReset\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-bar\",\n      children: [filters.map(filter => {\n        var _filter$options;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: filter.name,\n            children: filter.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), filter.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n            id: filter.name,\n            className: \"filter-value\",\n            value: values[filter.name] || \"all\",\n            onChange: e => onChange(filter.name, e.target.value),\n            children: (_filter$options = filter.options) === null || _filter$options === void 0 ? void 0 : _filter$options.map(opt => typeof opt === \"string\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n              value: opt,\n              children: opt\n            }, opt, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n              value: opt.value,\n              children: opt.label\n            }, opt.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this) : filter.type === \"text\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n            id: filter.name,\n            type: \"text\",\n            className: \"filter-value\",\n            placeholder: filter.placeholder || \"\",\n            value: values[filter.name] || \"\",\n            onChange: e => onChange(filter.name, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this) : null]\n        }, filter.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-item\",\n        children: onReset && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-lg\",\n          onClick: onReset,\n          style: {\n            marginLeft: \"8px\"\n          },\n          children: \"Reset Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = FilterBar;\nexport default FilterBar;\nvar _c;\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FilterBar","filters","values","onChange","onReset","className","children","map","filter","_filter$options","htmlFor","name","label","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","e","target","options","opt","placeholder","onClick","style","marginLeft","_c","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/components/FilterBar.js"],"sourcesContent":["// src/components/FilterBar.jsx\r\nimport React from \"react\";\r\n\r\nfunction FilterBar({ filters, values, onChange, onReset }) {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter-bar\">\r\n        {filters.map((filter) => (\r\n          <div className=\"filter-item\" key={filter.name}>\r\n            <label htmlFor={filter.name}>{filter.label}</label>\r\n            {filter.type === \"select\" ? (\r\n              <select\r\n                id={filter.name}\r\n                className=\"filter-value\"\r\n                value={values[filter.name] || \"all\"}\r\n                onChange={(e) => onChange(filter.name, e.target.value)}\r\n              >\r\n                {filter.options?.map((opt) =>\r\n                  typeof opt === \"string\" ? (\r\n                    <option key={opt} value={opt}>\r\n                      {opt}\r\n                    </option>\r\n                  ) : (\r\n                    <option key={opt.value} value={opt.value}>\r\n                      {opt.label}\r\n                    </option>\r\n                  )\r\n                )}\r\n              </select>\r\n            ) : filter.type === \"text\" ? (\r\n              <input\r\n                id={filter.name}\r\n                type=\"text\"\r\n                className=\"filter-value\"\r\n                placeholder={filter.placeholder || \"\"}\r\n                value={values[filter.name] || \"\"}\r\n                onChange={(e) => onChange(filter.name, e.target.value)}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n        <div className=\"filter-item\">\r\n          {onReset && (\r\n            <button className=\"btn btn-primary btn-lg\" onClick={onReset} style={{ marginLeft: \"8px\"}}>\r\n              Reset Filter\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}