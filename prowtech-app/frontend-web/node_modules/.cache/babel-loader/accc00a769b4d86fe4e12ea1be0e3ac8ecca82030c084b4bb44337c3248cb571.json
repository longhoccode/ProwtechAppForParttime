{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const storedToken=localStorage.getItem('token');const storedUser=localStorage.getItem('user');if(storedToken&&storedUser){setUser(JSON.parse(storedUser));setToken(storedToken);setIsAuthenticated(true);// Set the auth token for all subsequent api requests\napi.defaults.headers.common['Authorization']=\"Bearer \".concat(storedToken);}setLoading(false);},[]);const login=data=>{localStorage.setItem('user',JSON.stringify(data.user));localStorage.setItem('token',data.token);setUser(data.user);setToken(data.token);setIsAuthenticated(true);api.defaults.headers.common['Authorization']=\"Bearer \".concat(data.token);};const logout=()=>{localStorage.removeItem('user');localStorage.removeItem('token');setUser(null);setToken(null);setIsAuthenticated(false);delete api.defaults.headers.common['Authorization'];};const value={user,token,isAuthenticated,loading,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to easily use the auth context\nexport const useAuth=()=>{return useContext(AuthContext);};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","loading","setLoading","storedToken","storedUser","JSON","parse","defaults","headers","common","concat","login","data","setItem","stringify","logout","removeItem","value","Provider","useAuth"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        const storedUser = localStorage.getItem('user');\r\n\r\n        if (storedToken && storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n            setToken(storedToken);\r\n            setIsAuthenticated(true);\r\n            // Set the auth token for all subsequent api requests\r\n            api.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const login = (data) => {\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        localStorage.setItem('token', data.token);\r\n        setUser(data.user);\r\n        setToken(data.token);\r\n        setIsAuthenticated(true);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${data.token}`;\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n        setToken(null);\r\n        setIsAuthenticated(false);\r\n        delete api.defaults.headers.common['Authorization'];\r\n    };\r\n\r\n    const value = { user, token, isAuthenticated, loading, login, logout };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to easily use the auth context\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAACc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CACjE,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAE5CE,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkB,WAAW,CAAGN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,KAAM,CAAAM,UAAU,CAAGP,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAE/C,GAAIK,WAAW,EAAIC,UAAU,CAAE,CAC3BV,OAAO,CAACW,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC,CAC/BR,QAAQ,CAACO,WAAW,CAAC,CACrBH,kBAAkB,CAAC,IAAI,CAAC,CACxB;AACAd,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,WAAAC,MAAA,CAAaP,WAAW,CAAE,CAC1E,CACAD,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAAK,CAAIC,IAAI,EAAK,CACpBf,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAER,IAAI,CAACS,SAAS,CAACF,IAAI,CAACnB,IAAI,CAAC,CAAC,CACvDI,YAAY,CAACgB,OAAO,CAAC,OAAO,CAAED,IAAI,CAACjB,KAAK,CAAC,CACzCD,OAAO,CAACkB,IAAI,CAACnB,IAAI,CAAC,CAClBG,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC,CACpBK,kBAAkB,CAAC,IAAI,CAAC,CACxBd,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,WAAAC,MAAA,CAAaE,IAAI,CAACjB,KAAK,CAAE,CACzE,CAAC,CAED,KAAM,CAAAoB,MAAM,CAAGA,CAAA,GAAM,CACjBlB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC,CAC/BnB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC,CAChCtB,OAAO,CAAC,IAAI,CAAC,CACbE,QAAQ,CAAC,IAAI,CAAC,CACdI,kBAAkB,CAAC,KAAK,CAAC,CACzB,MAAO,CAAAd,GAAG,CAACqB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,CACvD,CAAC,CAED,KAAM,CAAAQ,KAAK,CAAG,CAAExB,IAAI,CAAEE,KAAK,CAAEI,eAAe,CAAEE,OAAO,CAAEU,KAAK,CAAEI,MAAO,CAAC,CAEtE,mBACI3B,IAAA,CAACC,WAAW,CAAC6B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAzB,QAAA,CAC9BA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED;AACA,MAAO,MAAM,CAAA2B,OAAO,CAAGA,CAAA,GAAM,CACzB,MAAO,CAAAnC,UAAU,CAACK,WAAW,CAAC,CAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}