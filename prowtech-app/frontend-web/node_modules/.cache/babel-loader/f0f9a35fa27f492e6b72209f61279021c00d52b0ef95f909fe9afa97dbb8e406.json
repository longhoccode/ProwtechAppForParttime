{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\ProwtechMobileApp\\\\prowtech-app\\\\frontend-web\\\\src\\\\components\\\\StoresMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '600px',\n  borderRadius: '8px'\n};\n\n// Trung tâm mặc định (TP.HCM)\nconst defaultCenter = {\n  lat: 10.7769,\n  lng: 106.7009\n};\n\n// Style bản đồ: ẩn label, chỉ giữ đường + land\nconst mapStyles = [{\n  featureType: 'all',\n  elementType: 'labels',\n  stylers: [{\n    visibility: 'off'\n  }]\n}, {\n  featureType: 'road',\n  elementType: 'geometry',\n  stylers: [{\n    color: '#cccccc'\n  }]\n}, {\n  featureType: 'poi',\n  stylers: [{\n    visibility: 'off'\n  }]\n}, {\n  featureType: 'transit',\n  stylers: [{\n    visibility: 'off'\n  }]\n}];\nfunction StoresMap({\n  stores\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [selectedStore, setSelectedStore] = useState(null);\n  const mapRef = useRef(null);\n\n  // Lưu lại reference của bản đồ\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    center: defaultCenter,\n    zoom: 12,\n    options: {\n      styles: mapStyles\n    },\n    onLoad: onLoad,\n    children: [stores.map(store => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: parseFloat(store.latitude),\n        lng: parseFloat(store.longitude)\n      }\n      // Nếu marker đang chọn → icon khác\n      ,\n      icon: (selectedStore === null || selectedStore === void 0 ? void 0 : selectedStore.id) === store.id ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',\n      onClick: () => {\n        setSelectedStore(store);\n        if (mapRef.current) {\n          mapRef.current.panTo({\n            lat: parseFloat(store.latitude),\n            lng: parseFloat(store.longitude)\n          });\n          mapRef.current.setZoom(15);\n        }\n      }\n    }, store.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)), selectedStore && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedStore.latitude),\n        lng: parseFloat(selectedStore.longitude)\n      },\n      onCloseClick: () => {\n        setSelectedStore(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: 0\n          },\n          children: selectedStore.display_name || selectedStore.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '0.9em',\n            color: '#555'\n          },\n          children: selectedStore.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(StoresMap, \"iWQ7dlUVDluLUgs4C3IYTBtJaHI=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = StoresMap;\nexport default _c2 = /*#__PURE__*/React.memo(StoresMap);\nvar _c, _c2;\n$RefreshReg$(_c, \"StoresMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useCallback","useRef","GoogleMap","useJsApiLoader","Marker","InfoWindow","jsxDEV","_jsxDEV","mapContainerStyle","width","height","borderRadius","defaultCenter","lat","lng","mapStyles","featureType","elementType","stylers","visibility","color","StoresMap","stores","_s","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selectedStore","setSelectedStore","mapRef","onLoad","map","current","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","options","styles","store","position","parseFloat","latitude","longitude","icon","onClick","panTo","setZoom","onCloseClick","style","maxWidth","margin","display_name","name","fontSize","address","_c","_c2","memo","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/ProwtechMobileApp/prowtech-app/frontend-web/src/components/StoresMap.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow } from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '600px',\r\n  borderRadius: '8px',\r\n};\r\n\r\n// Trung tâm mặc định (TP.HCM)\r\nconst defaultCenter = {\r\n  lat: 10.7769,\r\n  lng: 106.7009\r\n};\r\n\r\n// Style bản đồ: ẩn label, chỉ giữ đường + land\r\nconst mapStyles = [\r\n  {\r\n    featureType: 'all',\r\n    elementType: 'labels',\r\n    stylers: [{ visibility: 'off' }]\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'geometry',\r\n    stylers: [{ color: '#cccccc' }]\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    stylers: [{ visibility: 'off' }]\r\n  },\r\n  {\r\n    featureType: 'transit',\r\n    stylers: [{ visibility: 'off' }]\r\n  }\r\n];\r\n\r\nfunction StoresMap({ stores }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\r\n  });\r\n\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n  const mapRef = useRef(null);\r\n\r\n  // Lưu lại reference của bản đồ\r\n  const onLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      center={defaultCenter}\r\n      zoom={12}\r\n      options={{ styles: mapStyles }}\r\n      onLoad={onLoad}\r\n    >\r\n      {/* Marker cho tất cả cửa hàng */}\r\n      {stores.map((store) => (\r\n        <Marker\r\n          key={store.id}\r\n          position={{\r\n            lat: parseFloat(store.latitude),\r\n            lng: parseFloat(store.longitude)\r\n          }}\r\n          // Nếu marker đang chọn → icon khác\r\n          icon={\r\n            selectedStore?.id === store.id\r\n              ? 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\r\n              : 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\r\n          }\r\n          onClick={() => {\r\n            setSelectedStore(store);\r\n            if (mapRef.current) {\r\n              mapRef.current.panTo({\r\n                lat: parseFloat(store.latitude),\r\n                lng: parseFloat(store.longitude),\r\n              });\r\n              mapRef.current.setZoom(15);\r\n            }\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {/* InfoWindow hiển thị khi chọn */}\r\n      {selectedStore && (\r\n        <InfoWindow\r\n          position={{\r\n            lat: parseFloat(selectedStore.latitude),\r\n            lng: parseFloat(selectedStore.longitude)\r\n          }}\r\n          onCloseClick={() => {\r\n            setSelectedStore(null);\r\n          }}\r\n        >\r\n          <div style={{ maxWidth: '200px' }}>\r\n            <h4 style={{ margin: 0 }}>{selectedStore.display_name || selectedStore.name}</h4>\r\n            <p style={{ fontSize: '0.9em', color: '#555' }}>{selectedStore.address}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(StoresMap);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}