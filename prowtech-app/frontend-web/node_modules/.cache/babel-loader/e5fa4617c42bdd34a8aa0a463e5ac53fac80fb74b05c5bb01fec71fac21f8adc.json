{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\CODESPACE\\\\prowtech-app\\\\frontend-web\\\\src\\\\pages\\\\StoreMapPage.js\",\n  _s = $RefreshSig$();\n// File: StoreMapPage.jsx\nimport React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from \"@react-google-maps/api\";\nimport FilterBar from \"../components/FilterBar\";\nimport StoreCount from \"../components/StoreCount\";\nimport api from \"../services/api\";\nimport { provinces, districtMap } from \"../constants/locationData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAP_CONTAINER_STYLE = {\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"8px\"\n};\nfunction StoreMapPage() {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n  const [campaignStores, setCampaignStores] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [selectedStore, setSelectedStore] = useState(null);\n  const [filterValues, setFilterValues] = useState({\n    board: \"all\",\n    campaign: \"all\",\n    district: \"all\",\n    districtRaw: \"all\"\n  });\n  const mapRef = useRef(null);\n\n  // Load Google Maps\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  // Lấy vị trí người dùng\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        const loc = {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        };\n        setUserLocation(loc);\n        if (mapRef.current) {\n          mapRef.current.setCenter(loc);\n          mapRef.current.setZoom(14);\n        }\n      }, err => console.warn(\"Geolocation denied or error:\", err), {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, [isLoaded]);\n\n  // Fetch data từ API\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([api.get(\"/stores\"), api.get(\"/campaigns\"), api.get(\"/campaigns/campaign-stores\")]);\n        setStores(resStores.data.data || []);\n        setCampaigns(resCampaigns.data.data || []);\n        setCampaignStores(resCampaignStores.data.data || []);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const onMapLoad = map => {\n    mapRef.current = map;\n  };\n  const handleReset = () => {\n    setFilterValues({\n      board: \"all\",\n      campaign: \"all\",\n      district: \"all\",\n      districtRaw: \"all\"\n    });\n    setSelectedStore(null);\n    if (mapRef.current && userLocation) {\n      mapRef.current.setCenter(userLocation);\n      mapRef.current.setZoom(12);\n    }\n  };\n\n  // Tính toán filteredStores\n  const filteredStores = useMemo(() => {\n    return stores.filter(store => {\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\n      const campaignMatch = filterValues.campaign === \"all\" || campaignStores.some(cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id));\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\n    });\n  }, [stores, filterValues, campaignStores]);\n\n  // Province options từ filteredStores\n  const provinceOptions = useMemo(() => {\n    const provincesFromFiltered = [...new Set(filteredStores.map(s => s.district))];\n    return provincesFromFiltered.map(d => {\n      const provinceObj = provinces.find(p => p.value === d);\n      return provinceObj ? {\n        value: provinceObj.value,\n        label: provinceObj.label\n      } : null;\n    }).filter(Boolean);\n  }, [filteredStores]);\n\n  // DistrictRaw options từ filteredStores\n  const districtRawOptions = useMemo(() => {\n    if (filterValues.district === \"all\") return [];\n    const districtsFromFiltered = [...new Set(filteredStores.filter(s => s.district === filterValues.district).map(s => s.district_raw))];\n    return districtsFromFiltered.map(d => {\n      var _districtMap$filterVa;\n      const found = (_districtMap$filterVa = districtMap[filterValues.district]) === null || _districtMap$filterVa === void 0 ? void 0 : _districtMap$filterVa.find(x => x.value === d);\n      return found ? {\n        value: found.value,\n        label: found.label\n      } : null;\n    }).filter(Boolean);\n  }, [filteredStores, filterValues.district]);\n\n  // Board options\n  const boardOptions = useMemo(() => [...new Set(stores.map(s => s.board_name))].sort(), [stores]);\n\n  // Filters\n  const filters = useMemo(() => {\n    const baseFilters = [{\n      name: \"board\",\n      label: \"Chain\",\n      type: \"select\",\n      options: [\"Tất cả\", ...boardOptions]\n    }, {\n      name: \"campaign\",\n      label: \"Campaign\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...campaigns.map(c => ({\n        value: c.id,\n        label: c.name\n      }))]\n    }, {\n      name: \"district\",\n      label: \"Provinces\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...provinceOptions]\n    }];\n    if (filterValues.district !== \"all\") {\n      baseFilters.push({\n        name: \"districtRaw\",\n        label: \"District\",\n        type: \"select\",\n        options: [{\n          value: \"all\",\n          label: \"Tất cả\"\n        }, ...districtRawOptions]\n      });\n    }\n    return baseFilters;\n  }, [boardOptions, campaigns, filterValues.district, provinceOptions, districtRawOptions]);\n  const handleFilterChange = (name, value) => {\n    setFilterValues(prev => {\n      if (name === \"district\") {\n        return {\n          ...prev,\n          district: value,\n          districtRaw: \"all\"\n        };\n      }\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n    if (mapRef.current && userLocation) {\n      mapRef.current.setCenter(userLocation);\n      mapRef.current.setZoom(12);\n    }\n  };\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"Error loading Google Maps: \", loadError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title\",\n        children: \"Store Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      values: filterValues,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btn-lg mt-2\",\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"0.5rem 0\"\n      },\n      className: \"desktop-only\",\n      children: /*#__PURE__*/_jsxDEV(StoreCount, {\n        count: filteredStores.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: MAP_CONTAINER_STYLE,\n        center: userLocation,\n        zoom: 12,\n        onLoad: onMapLoad,\n        children: [filteredStores.map(store => {\n          let iconUrl = \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\";\n          if (filterValues.campaign !== \"all\") {\n            const cs = campaignStores.find(cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id));\n            if (cs !== null && cs !== void 0 && cs.is_done) {\n              iconUrl = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\";\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: Number(store.latitude),\n              lng: Number(store.longitude)\n            },\n            icon: {\n              url: iconUrl,\n              scaledSize: new window.google.maps.Size(36, 36)\n            },\n            onClick: () => setSelectedStore(store)\n          }, store.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this);\n        }), selectedStore && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: Number(selectedStore.latitude),\n            lng: Number(selectedStore.longitude)\n          },\n          onCloseClick: () => setSelectedStore(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: selectedStore.store_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address\",\n              children: selectedStore.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"board-name\",\n              children: [\"BOARD: \", selectedStore.board_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"btn btn-outline btn-sm\",\n              children: \"View on Google Maps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(StoreMapPage, \"9CRTfz46ITb3chSxGWgMb2rCVVo=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = StoreMapPage;\nexport default _c2 = /*#__PURE__*/memo(StoreMapPage);\nvar _c, _c2;\n$RefreshReg$(_c, \"StoreMapPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useRef","useEffect","GoogleMap","useJsApiLoader","InfoWindow","Marker","FilterBar","StoreCount","api","provinces","districtMap","jsxDEV","_jsxDEV","MAP_CONTAINER_STYLE","width","height","borderRadius","StoreMapPage","_s","stores","setStores","campaigns","setCampaigns","campaignStores","setCampaignStores","userLocation","setUserLocation","selectedStore","setSelectedStore","filterValues","setFilterValues","board","campaign","district","districtRaw","mapRef","isLoaded","loadError","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","navigator","geolocation","getCurrentPosition","pos","loc","lat","coords","latitude","lng","longitude","current","setCenter","setZoom","err","console","warn","enableHighAccuracy","timeout","maximumAge","fetchData","resStores","resCampaigns","resCampaignStores","Promise","all","get","data","error","onMapLoad","map","handleReset","filteredStores","filter","store","boardMatch","board_name","districtMatch","districtRawMatch","district_raw","campaignMatch","some","cs","String","campaign_id","store_id","provinceOptions","provincesFromFiltered","Set","s","d","provinceObj","find","p","value","label","Boolean","districtRawOptions","districtsFromFiltered","_districtMap$filterVa","found","x","boardOptions","sort","filters","baseFilters","name","type","options","c","push","handleFilterChange","prev","style","color","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","values","onChange","onClick","margin","count","length","mapContainerStyle","center","zoom","onLoad","iconUrl","is_done","position","Number","icon","url","scaledSize","window","google","maps","Size","onCloseClick","store_code","address","href","target","rel","_c","_c2","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/pages/StoreMapPage.js"],"sourcesContent":["// File: StoreMapPage.jsx\r\nimport React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from \"@react-google-maps/api\";\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport StoreCount from \"../components/StoreCount\";\r\nimport api from \"../services/api\";\r\nimport { provinces, districtMap } from \"../constants/locationData\";\r\n\r\nconst MAP_CONTAINER_STYLE = { width: \"100%\", height: \"100%\", borderRadius: \"8px\" };\r\n\r\nfunction StoreMapPage() {\r\n  const [stores, setStores] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [campaignStores, setCampaignStores] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  const [filterValues, setFilterValues] = useState({\r\n    board: \"all\",\r\n    campaign: \"all\",\r\n    district: \"all\",\r\n    districtRaw: \"all\",\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  // Load Google Maps\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  // Lấy vị trí người dùng\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (pos) => {\r\n          const loc = { lat: pos.coords.latitude, lng: pos.coords.longitude };\r\n          setUserLocation(loc);\r\n          if (mapRef.current) {\r\n            mapRef.current.setCenter(loc);\r\n            mapRef.current.setZoom(14);\r\n          }\r\n        },\r\n        (err) => console.warn(\"Geolocation denied or error:\", err),\r\n        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n      );\r\n    }\r\n  }, [isLoaded]);\r\n\r\n  // Fetch data từ API\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([\r\n          api.get(\"/stores\"),\r\n          api.get(\"/campaigns\"),\r\n          api.get(\"/campaigns/campaign-stores\"),\r\n        ]);\r\n        setStores(resStores.data.data || []);\r\n        setCampaigns(resCampaigns.data.data || []);\r\n        setCampaignStores(resCampaignStores.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onMapLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilterValues({ board: \"all\", campaign: \"all\", district: \"all\", districtRaw: \"all\" });\r\n    setSelectedStore(null);\r\n    if (mapRef.current && userLocation) {\r\n      mapRef.current.setCenter(userLocation);\r\n      mapRef.current.setZoom(12);\r\n    }\r\n  };\r\n\r\n  // Tính toán filteredStores\r\n  const filteredStores = useMemo(() => {\r\n    return stores.filter((store) => {\r\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\r\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\r\n      const districtRawMatch =\r\n        filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\r\n      const campaignMatch =\r\n        filterValues.campaign === \"all\" ||\r\n        campaignStores.some(\r\n          (cs) =>\r\n            String(cs.campaign_id) === String(filterValues.campaign) &&\r\n            String(cs.store_id) === String(store.id)\r\n        );\r\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\r\n    });\r\n  }, [stores, filterValues, campaignStores]);\r\n\r\n  // Province options từ filteredStores\r\n  const provinceOptions = useMemo(() => {\r\n    const provincesFromFiltered = [...new Set(filteredStores.map((s) => s.district))];\r\n    return provincesFromFiltered\r\n      .map((d) => {\r\n        const provinceObj = provinces.find((p) => p.value === d);\r\n        return provinceObj ? { value: provinceObj.value, label: provinceObj.label } : null;\r\n      })\r\n      .filter(Boolean);\r\n  }, [filteredStores]);\r\n\r\n  // DistrictRaw options từ filteredStores\r\n  const districtRawOptions = useMemo(() => {\r\n    if (filterValues.district === \"all\") return [];\r\n\r\n    const districtsFromFiltered = [\r\n      ...new Set(\r\n        filteredStores\r\n          .filter((s) => s.district === filterValues.district)\r\n          .map((s) => s.district_raw)\r\n      ),\r\n    ];\r\n\r\n    return districtsFromFiltered\r\n      .map((d) => {\r\n        const found = districtMap[filterValues.district]?.find((x) => x.value === d);\r\n        return found ? { value: found.value, label: found.label } : null;\r\n      })\r\n      .filter(Boolean);\r\n  }, [filteredStores, filterValues.district]);\r\n\r\n  // Board options\r\n  const boardOptions = useMemo(\r\n    () => [...new Set(stores.map((s) => s.board_name))].sort(),\r\n    [stores]\r\n  );\r\n\r\n  // Filters\r\n  const filters = useMemo(() => {\r\n    const baseFilters = [\r\n      { name: \"board\", label: \"Chain\", type: \"select\", options: [\"Tất cả\", ...boardOptions] },\r\n      {\r\n        name: \"campaign\",\r\n        label: \"Campaign\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...campaigns.map((c) => ({ value: c.id, label: c.name }))],\r\n      },\r\n      {\r\n        name: \"district\",\r\n        label: \"Provinces\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...provinceOptions],\r\n      },\r\n    ];\r\n\r\n    if (filterValues.district !== \"all\") {\r\n      baseFilters.push({\r\n        name: \"districtRaw\",\r\n        label: \"District\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...districtRawOptions],\r\n      });\r\n    }\r\n\r\n    return baseFilters;\r\n  }, [boardOptions, campaigns, filterValues.district, provinceOptions, districtRawOptions]);\r\n\r\n  const handleFilterChange = (name, value) => {\r\n    setFilterValues((prev) => {\r\n      if (name === \"district\") {\r\n        return { ...prev, district: value, districtRaw: \"all\" };\r\n      }\r\n      return { ...prev, [name]: value };\r\n    });\r\n\r\n    if (mapRef.current && userLocation) {\r\n      mapRef.current.setCenter(userLocation);\r\n      mapRef.current.setZoom(12);\r\n    }\r\n  };\r\n\r\n  if (loadError) return <div style={{ color: \"red\" }}>Error loading Google Maps: {loadError.message}</div>;\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"page-title\">Store Map</h2>\r\n      </div>\r\n\r\n      <FilterBar filters={filters} values={filterValues} onChange={handleFilterChange} />\r\n      <button className=\"btn btn-primary btn-lg mt-2\" onClick={handleReset}>\r\n        Reset\r\n      </button>\r\n\r\n      <div style={{ margin: \"0.5rem 0\" }} className=\"desktop-only\">\r\n        <StoreCount count={filteredStores.length} />\r\n      </div>\r\n\r\n      <div className=\"map-container\">\r\n        <GoogleMap mapContainerStyle={MAP_CONTAINER_STYLE} center={userLocation} zoom={12} onLoad={onMapLoad}>\r\n          {filteredStores.map((store) => {\r\n            let iconUrl = \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\";\r\n\r\n            if (filterValues.campaign !== \"all\") {\r\n              const cs = campaignStores.find(\r\n                (cs) =>\r\n                  String(cs.campaign_id) === String(filterValues.campaign) &&\r\n                  String(cs.store_id) === String(store.id)\r\n              );\r\n\r\n              if (cs?.is_done) {\r\n                iconUrl = \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\";\r\n              }\r\n            }\r\n\r\n            return (\r\n              <Marker\r\n                key={store.id}\r\n                position={{ lat: Number(store.latitude), lng: Number(store.longitude) }}\r\n                icon={{ url: iconUrl, scaledSize: new window.google.maps.Size(36, 36) }}\r\n                onClick={() => setSelectedStore(store)}\r\n              />\r\n            );\r\n          })}\r\n\r\n          {selectedStore && (\r\n            <InfoWindow\r\n              position={{ lat: Number(selectedStore.latitude), lng: Number(selectedStore.longitude) }}\r\n              onCloseClick={() => setSelectedStore(null)}\r\n            >\r\n              <div className=\"map-popup\">\r\n                <h3>{selectedStore.store_code}</h3>\r\n                <p className=\"address\">{selectedStore.address}</p>\r\n                <p className=\"board-name\">BOARD: {selectedStore.board_name}</p>\r\n                <a\r\n                  href={`https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"btn btn-outline btn-sm\"\r\n                >\r\n                  View on Google Maps\r\n                </a>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(StoreMapPage);\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,SAAS,EAAEC,cAAc,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtF,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,SAAS,EAAEC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,mBAAmB,GAAG;EAAEC,KAAK,EAAE,MAAM;EAAEC,MAAM,EAAE,MAAM;EAAEC,YAAY,EAAE;AAAM,CAAC;AAElF,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC;IAC/CiC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGnC,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM;IAAEoC,QAAQ;IAAEC;EAAU,CAAC,GAAGlC,cAAc,CAAC;IAC7CmC,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;;EAEF;EACAzC,SAAS,CAAC,MAAM;IACd,IAAI0C,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,GAAG,IAAK;QACP,MAAMC,GAAG,GAAG;UAAEC,GAAG,EAAEF,GAAG,CAACG,MAAM,CAACC,QAAQ;UAAEC,GAAG,EAAEL,GAAG,CAACG,MAAM,CAACG;QAAU,CAAC;QACnE1B,eAAe,CAACqB,GAAG,CAAC;QACpB,IAAIZ,MAAM,CAACkB,OAAO,EAAE;UAClBlB,MAAM,CAACkB,OAAO,CAACC,SAAS,CAACP,GAAG,CAAC;UAC7BZ,MAAM,CAACkB,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;QAC5B;MACF,CAAC,EACAC,GAAG,IAAKC,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEF,GAAG,CAAC,EAC1D;QAAEG,kBAAkB,EAAE,IAAI;QAAEC,OAAO,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAE,CAC3D,CAAC;IACH;EACF,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;;EAEd;EACAnC,SAAS,CAAC,MAAM;IACd,MAAM6D,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM,CAACC,SAAS,EAAEC,YAAY,EAAEC,iBAAiB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACrE3D,GAAG,CAAC4D,GAAG,CAAC,SAAS,CAAC,EAClB5D,GAAG,CAAC4D,GAAG,CAAC,YAAY,CAAC,EACrB5D,GAAG,CAAC4D,GAAG,CAAC,4BAA4B,CAAC,CACtC,CAAC;QACFhD,SAAS,CAAC2C,SAAS,CAACM,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;QACpC/C,YAAY,CAAC0C,YAAY,CAACK,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;QAC1C7C,iBAAiB,CAACyC,iBAAiB,CAACI,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC;MACtD,CAAC,CAAC,OAAOb,GAAG,EAAE;QACZC,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEd,GAAG,CAAC;MAC5C;IACF,CAAC;IACDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAIC,GAAG,IAAK;IACzBrC,MAAM,CAACkB,OAAO,GAAGmB,GAAG;EACtB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB3C,eAAe,CAAC;MAAEC,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,QAAQ,EAAE,KAAK;MAAEC,WAAW,EAAE;IAAM,CAAC,CAAC;IACvFN,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIO,MAAM,CAACkB,OAAO,IAAI5B,YAAY,EAAE;MAClCU,MAAM,CAACkB,OAAO,CAACC,SAAS,CAAC7B,YAAY,CAAC;MACtCU,MAAM,CAACkB,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMmB,cAAc,GAAG3E,OAAO,CAAC,MAAM;IACnC,OAAOoB,MAAM,CAACwD,MAAM,CAAEC,KAAK,IAAK;MAC9B,MAAMC,UAAU,GAAGhD,YAAY,CAACE,KAAK,KAAK,KAAK,IAAI6C,KAAK,CAACE,UAAU,KAAKjD,YAAY,CAACE,KAAK;MAC1F,MAAMgD,aAAa,GAAGlD,YAAY,CAACI,QAAQ,KAAK,KAAK,IAAI2C,KAAK,CAAC3C,QAAQ,KAAKJ,YAAY,CAACI,QAAQ;MACjG,MAAM+C,gBAAgB,GACpBnD,YAAY,CAACK,WAAW,KAAK,KAAK,IAAI0C,KAAK,CAACK,YAAY,KAAKpD,YAAY,CAACK,WAAW;MACvF,MAAMgD,aAAa,GACjBrD,YAAY,CAACG,QAAQ,KAAK,KAAK,IAC/BT,cAAc,CAAC4D,IAAI,CAChBC,EAAE,IACDC,MAAM,CAACD,EAAE,CAACE,WAAW,CAAC,KAAKD,MAAM,CAACxD,YAAY,CAACG,QAAQ,CAAC,IACxDqD,MAAM,CAACD,EAAE,CAACG,QAAQ,CAAC,KAAKF,MAAM,CAACT,KAAK,CAACtC,EAAE,CAC3C,CAAC;MACH,OAAOuC,UAAU,IAAIE,aAAa,IAAIC,gBAAgB,IAAIE,aAAa;IACzE,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC/D,MAAM,EAAEU,YAAY,EAAEN,cAAc,CAAC,CAAC;;EAE1C;EACA,MAAMiE,eAAe,GAAGzF,OAAO,CAAC,MAAM;IACpC,MAAM0F,qBAAqB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAChB,cAAc,CAACF,GAAG,CAAEmB,CAAC,IAAKA,CAAC,CAAC1D,QAAQ,CAAC,CAAC,CAAC;IACjF,OAAOwD,qBAAqB,CACzBjB,GAAG,CAAEoB,CAAC,IAAK;MACV,MAAMC,WAAW,GAAGpF,SAAS,CAACqF,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKJ,CAAC,CAAC;MACxD,OAAOC,WAAW,GAAG;QAAEG,KAAK,EAAEH,WAAW,CAACG,KAAK;QAAEC,KAAK,EAAEJ,WAAW,CAACI;MAAM,CAAC,GAAG,IAAI;IACpF,CAAC,CAAC,CACDtB,MAAM,CAACuB,OAAO,CAAC;EACpB,CAAC,EAAE,CAACxB,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMyB,kBAAkB,GAAGpG,OAAO,CAAC,MAAM;IACvC,IAAI8B,YAAY,CAACI,QAAQ,KAAK,KAAK,EAAE,OAAO,EAAE;IAE9C,MAAMmE,qBAAqB,GAAG,CAC5B,GAAG,IAAIV,GAAG,CACRhB,cAAc,CACXC,MAAM,CAAEgB,CAAC,IAAKA,CAAC,CAAC1D,QAAQ,KAAKJ,YAAY,CAACI,QAAQ,CAAC,CACnDuC,GAAG,CAAEmB,CAAC,IAAKA,CAAC,CAACV,YAAY,CAC9B,CAAC,CACF;IAED,OAAOmB,qBAAqB,CACzB5B,GAAG,CAAEoB,CAAC,IAAK;MAAA,IAAAS,qBAAA;MACV,MAAMC,KAAK,IAAAD,qBAAA,GAAG3F,WAAW,CAACmB,YAAY,CAACI,QAAQ,CAAC,cAAAoE,qBAAA,uBAAlCA,qBAAA,CAAoCP,IAAI,CAAES,CAAC,IAAKA,CAAC,CAACP,KAAK,KAAKJ,CAAC,CAAC;MAC5E,OAAOU,KAAK,GAAG;QAAEN,KAAK,EAAEM,KAAK,CAACN,KAAK;QAAEC,KAAK,EAAEK,KAAK,CAACL;MAAM,CAAC,GAAG,IAAI;IAClE,CAAC,CAAC,CACDtB,MAAM,CAACuB,OAAO,CAAC;EACpB,CAAC,EAAE,CAACxB,cAAc,EAAE7C,YAAY,CAACI,QAAQ,CAAC,CAAC;;EAE3C;EACA,MAAMuE,YAAY,GAAGzG,OAAO,CAC1B,MAAM,CAAC,GAAG,IAAI2F,GAAG,CAACvE,MAAM,CAACqD,GAAG,CAAEmB,CAAC,IAAKA,CAAC,CAACb,UAAU,CAAC,CAAC,CAAC,CAAC2B,IAAI,CAAC,CAAC,EAC1D,CAACtF,MAAM,CACT,CAAC;;EAED;EACA,MAAMuF,OAAO,GAAG3G,OAAO,CAAC,MAAM;IAC5B,MAAM4G,WAAW,GAAG,CAClB;MAAEC,IAAI,EAAE,OAAO;MAAEX,KAAK,EAAE,OAAO;MAAEY,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAGN,YAAY;IAAE,CAAC,EACvF;MACEI,IAAI,EAAE,UAAU;MAChBX,KAAK,EAAE,UAAU;MACjBY,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,CAAC;QAAEd,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAS,CAAC,EAAE,GAAG5E,SAAS,CAACmD,GAAG,CAAEuC,CAAC,KAAM;QAAEf,KAAK,EAAEe,CAAC,CAACzE,EAAE;QAAE2D,KAAK,EAAEc,CAAC,CAACH;MAAK,CAAC,CAAC,CAAC;IACxG,CAAC,EACD;MACEA,IAAI,EAAE,UAAU;MAChBX,KAAK,EAAE,WAAW;MAClBY,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,CAAC;QAAEd,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAS,CAAC,EAAE,GAAGT,eAAe;IACjE,CAAC,CACF;IAED,IAAI3D,YAAY,CAACI,QAAQ,KAAK,KAAK,EAAE;MACnC0E,WAAW,CAACK,IAAI,CAAC;QACfJ,IAAI,EAAE,aAAa;QACnBX,KAAK,EAAE,UAAU;QACjBY,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CAAC;UAAEd,KAAK,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAS,CAAC,EAAE,GAAGE,kBAAkB;MACpE,CAAC,CAAC;IACJ;IAEA,OAAOQ,WAAW;EACpB,CAAC,EAAE,CAACH,YAAY,EAAEnF,SAAS,EAAEQ,YAAY,CAACI,QAAQ,EAAEuD,eAAe,EAAEW,kBAAkB,CAAC,CAAC;EAEzF,MAAMc,kBAAkB,GAAGA,CAACL,IAAI,EAAEZ,KAAK,KAAK;IAC1ClE,eAAe,CAAEoF,IAAI,IAAK;MACxB,IAAIN,IAAI,KAAK,UAAU,EAAE;QACvB,OAAO;UAAE,GAAGM,IAAI;UAAEjF,QAAQ,EAAE+D,KAAK;UAAE9D,WAAW,EAAE;QAAM,CAAC;MACzD;MACA,OAAO;QAAE,GAAGgF,IAAI;QAAE,CAACN,IAAI,GAAGZ;MAAM,CAAC;IACnC,CAAC,CAAC;IAEF,IAAI7D,MAAM,CAACkB,OAAO,IAAI5B,YAAY,EAAE;MAClCU,MAAM,CAACkB,OAAO,CAACC,SAAS,CAAC7B,YAAY,CAAC;MACtCU,MAAM,CAACkB,OAAO,CAACE,OAAO,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;EAED,IAAIlB,SAAS,EAAE,oBAAOzB,OAAA;IAAKuG,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAC,QAAA,GAAC,6BAA2B,EAAChF,SAAS,CAACiF,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACxG,IAAI,CAACtF,QAAQ,EAAE,oBAAOxB,OAAA;IAAAyG,QAAA,EAAK;EAAc;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/C,oBACE9G,OAAA;IAAK+G,SAAS,EAAC,WAAW;IAAAN,QAAA,gBACxBzG,OAAA;MAAK+G,SAAS,EAAC,aAAa;MAAAN,QAAA,eAC1BzG,OAAA;QAAI+G,SAAS,EAAC,YAAY;QAAAN,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAEN9G,OAAA,CAACN,SAAS;MAACoG,OAAO,EAAEA,OAAQ;MAACkB,MAAM,EAAE/F,YAAa;MAACgG,QAAQ,EAAEZ;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnF9G,OAAA;MAAQ+G,SAAS,EAAC,6BAA6B;MAACG,OAAO,EAAErD,WAAY;MAAA4C,QAAA,EAAC;IAEtE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET9G,OAAA;MAAKuG,KAAK,EAAE;QAAEY,MAAM,EAAE;MAAW,CAAE;MAACJ,SAAS,EAAC,cAAc;MAAAN,QAAA,eAC1DzG,OAAA,CAACL,UAAU;QAACyH,KAAK,EAAEtD,cAAc,CAACuD;MAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAEN9G,OAAA;MAAK+G,SAAS,EAAC,eAAe;MAAAN,QAAA,eAC5BzG,OAAA,CAACV,SAAS;QAACgI,iBAAiB,EAAErH,mBAAoB;QAACsH,MAAM,EAAE1G,YAAa;QAAC2G,IAAI,EAAE,EAAG;QAACC,MAAM,EAAE9D,SAAU;QAAA8C,QAAA,GAClG3C,cAAc,CAACF,GAAG,CAAEI,KAAK,IAAK;UAC7B,IAAI0D,OAAO,GAAG,sDAAsD;UAEpE,IAAIzG,YAAY,CAACG,QAAQ,KAAK,KAAK,EAAE;YACnC,MAAMoD,EAAE,GAAG7D,cAAc,CAACuE,IAAI,CAC3BV,EAAE,IACDC,MAAM,CAACD,EAAE,CAACE,WAAW,CAAC,KAAKD,MAAM,CAACxD,YAAY,CAACG,QAAQ,CAAC,IACxDqD,MAAM,CAACD,EAAE,CAACG,QAAQ,CAAC,KAAKF,MAAM,CAACT,KAAK,CAACtC,EAAE,CAC3C,CAAC;YAED,IAAI8C,EAAE,aAAFA,EAAE,eAAFA,EAAE,CAAEmD,OAAO,EAAE;cACfD,OAAO,GAAG,wDAAwD;YACpE;UACF;UAEA,oBACE1H,OAAA,CAACP,MAAM;YAELmI,QAAQ,EAAE;cAAExF,GAAG,EAAEyF,MAAM,CAAC7D,KAAK,CAAC1B,QAAQ,CAAC;cAAEC,GAAG,EAAEsF,MAAM,CAAC7D,KAAK,CAACxB,SAAS;YAAE,CAAE;YACxEsF,IAAI,EAAE;cAAEC,GAAG,EAAEL,OAAO;cAAEM,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAE,EAAE;YAAE,CAAE;YACxElB,OAAO,EAAEA,CAAA,KAAMlG,gBAAgB,CAACgD,KAAK;UAAE,GAHlCA,KAAK,CAACtC,EAAE;YAAAiF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAId,CAAC;QAEN,CAAC,CAAC,EAED/F,aAAa,iBACZf,OAAA,CAACR,UAAU;UACToI,QAAQ,EAAE;YAAExF,GAAG,EAAEyF,MAAM,CAAC9G,aAAa,CAACuB,QAAQ,CAAC;YAAEC,GAAG,EAAEsF,MAAM,CAAC9G,aAAa,CAACyB,SAAS;UAAE,CAAE;UACxF6F,YAAY,EAAEA,CAAA,KAAMrH,gBAAgB,CAAC,IAAI,CAAE;UAAAyF,QAAA,eAE3CzG,OAAA;YAAK+G,SAAS,EAAC,WAAW;YAAAN,QAAA,gBACxBzG,OAAA;cAAAyG,QAAA,EAAK1F,aAAa,CAACuH;YAAU;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnC9G,OAAA;cAAG+G,SAAS,EAAC,SAAS;cAAAN,QAAA,EAAE1F,aAAa,CAACwH;YAAO;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD9G,OAAA;cAAG+G,SAAS,EAAC,YAAY;cAAAN,QAAA,GAAC,SAAO,EAAC1F,aAAa,CAACmD,UAAU;YAAA;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/D9G,OAAA;cACEwI,IAAI,EAAE,8BAA8BzH,aAAa,CAACuB,QAAQ,IAAIvB,aAAa,CAACyB,SAAS,EAAG;cACxFiG,MAAM,EAAC,QAAQ;cACfC,GAAG,EAAC,qBAAqB;cACzB3B,SAAS,EAAC,wBAAwB;cAAAN,QAAA,EACnC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxG,EAAA,CAjPQD,YAAY;EAAA,QAkBad,cAAc;AAAA;AAAAoJ,EAAA,GAlBvCtI,YAAY;AAmPrB,eAAAuI,GAAA,gBAAe3J,IAAI,CAACoB,YAAY,CAAC;AAAC,IAAAsI,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}