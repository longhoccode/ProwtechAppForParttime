{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\CODESPACE\\\\prowtech-app\\\\frontend-web\\\\src\\\\pages\\\\StoreMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker, DirectionsRenderer } from \"@react-google-maps/api\";\nimport FilterBar from \"../components/FilterBar\";\nimport api from \"../services/api\";\nimport { provinces, districtMap } from \"../constants/locationData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_CENTER = {\n  lat: 10.7769,\n  lng: 106.7009\n}; // TP. HCM\nconst MAP_CONTAINER_STYLE = {\n  width: \"100%\",\n  height: \"600px\",\n  borderRadius: \"8px\"\n}; // Đặt chiều cao cố định cho bản đồ\n\nfunction StoreMapPage() {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n  const [campaignStores, setCampaignStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n\n  // State mới để lưu trữ kết quả lộ trình\n  const [directions, setDirections] = useState(null);\n  const [filterValues, setFilterValues] = useState({\n    board: \"all\",\n    campaign: \"all\",\n    district: \"all\",\n    districtRaw: \"all\"\n  });\n  const mapRef = useRef(null);\n\n  // Load Google Maps\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  // Fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([api.get(\"/stores\"), api.get(\"/campaigns\"), api.get(\"/campaigns/campaign-stores\")]);\n        setStores(resStores.data.data || []);\n        setCampaigns(resCampaigns.data.data || []);\n        setCampaignStores(resCampaignStores.data.data || []);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const onMapLoad = map => {\n    mapRef.current = map;\n  };\n  const handleReset = () => {\n    setFilterValues({\n      board: \"all\",\n      campaign: \"all\",\n      district: \"all\",\n      districtRaw: \"all\"\n    });\n    setSelectedStore(null);\n    setDirections(null); // Reset lộ trình\n    if (mapRef.current) {\n      mapRef.current.setCenter(DEFAULT_CENTER);\n      mapRef.current.setZoom(12);\n    }\n  };\n  const boardOptions = useMemo(() => [...new Set(stores.map(s => s.board_name))].sort(), [stores]);\n\n  // Build filters dynamically\n  const filters = useMemo(() => {\n    const baseFilters = [{\n      name: \"board\",\n      label: \"Chain\",\n      type: \"select\",\n      options: [\"Tất cả\", ...boardOptions]\n    }, {\n      name: \"campaign\",\n      label: \"Campaign\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...campaigns.map(c => ({\n        value: c.id,\n        label: c.name\n      }))]\n    }, {\n      name: \"district\",\n      label: \"Provinces\",\n      type: \"select\",\n      options: [{\n        value: \"all\",\n        label: \"Tất cả\"\n      }, ...provinces.map(p => ({\n        value: p.value,\n        label: p.label\n      }))]\n    }];\n\n    // Quận/Huyện chỉ hiện khi đã chọn tỉnh\n    if (filterValues.district !== \"all\") {\n      var _districtMap$filterVa;\n      baseFilters.push({\n        name: \"districtRaw\",\n        label: \"District\",\n        type: \"select\",\n        options: [{\n          value: \"all\",\n          label: \"Tất cả\"\n        }, ...(((_districtMap$filterVa = districtMap[filterValues.district]) === null || _districtMap$filterVa === void 0 ? void 0 : _districtMap$filterVa.map(d => ({\n          value: d.value,\n          label: d.label\n        }))) || [])]\n      });\n    }\n    return baseFilters;\n  }, [boardOptions, campaigns, filterValues.district]);\n  const handleFilterChange = (name, value) => {\n    // Reset lộ trình khi thay đổi bộ lọc\n    setDirections(null);\n    setSelectedStore(null);\n    setFilterValues(prev => {\n      if (name === \"district\") return {\n        ...prev,\n        district: value,\n        districtRaw: \"all\"\n      };\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  };\n  const filteredStores = useMemo(() => {\n    return stores.filter(store => {\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\n      const campaignMatch = filterValues.campaign === \"all\" || campaignStores.some(cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id));\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\n    });\n  }, [stores, filterValues, campaignStores]);\n\n  // --- Hàm tính toán Lộ Trình ---\n  const calculateRoute = storesToVisit => {\n    // 1. Kiểm tra số lượng cửa hàng\n    if (storesToVisit.length < 2) {\n      setDirections(null);\n      // Hiển thị thông báo thay vì alert\n      console.warn(\"Cần ít nhất 2 cửa hàng để tạo lộ trình.\");\n      return;\n    }\n\n    // 2. Chuẩn bị dữ liệu\n    const storeLocations = storesToVisit.map(store => ({\n      lat: Number(store.latitude),\n      lng: Number(store.longitude)\n    }));\n\n    // Điểm đầu và điểm cuối\n    const origin = storeLocations[0];\n    const destination = storeLocations[storeLocations.length - 1];\n\n    // Các điểm trung gian (không bao gồm điểm đầu và điểm cuối)\n    const waypoints = storeLocations.slice(1, -1).map(loc => ({\n      location: loc,\n      stopover: true // Đánh dấu đây là điểm dừng\n    }));\n\n    // 3. Gọi Directions Service\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      waypoints: waypoints,\n      optimizeWaypoints: true,\n      // Yêu cầu tối ưu hóa thứ tự các điểm dừng\n      travelMode: window.google.maps.TravelMode.DRIVING // Chế độ lái xe\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        setDirections(null);\n        console.error(\"Yêu cầu lộ trình thất bại:\", status);\n        // Bạn có thể hiển thị một message box tùy chỉnh ở đây\n      }\n    });\n  };\n  // --- Kết thúc hàm tính toán Lộ Trình ---\n\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"red\"\n    },\n    children: [\"L\\u1ED7i khi t\\u1EA3i Google Maps: \", loadError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0110ang t\\u1EA3i b\\u1EA3n \\u0111\\u1ED3...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"page-title text-2xl font-bold\",\n        children: \"B\\u1EA3n \\u0110\\u1ED3 C\\u1EEDa H\\xE0ng & L\\u1ED9 Tr\\xECnh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filters: filters,\n      values: filterValues,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        onClick: handleReset,\n        children: \"\\u0110\\u1EB7t L\\u1EA1i B\\u1ED9 L\\u1ECDc & B\\u1EA3n \\u0110\\u1ED3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-lg\",\n        onClick: () => calculateRoute(filteredStores),\n        disabled: filteredStores.length < 2 // Vô hiệu hóa nếu ít hơn 2 điểm\n        ,\n        children: [\"T\\xEDnh L\\u1ED9 Tr\\xECnh T\\u1ED1i \\u01AFu (\", filteredStores.length, \" \\u0110i\\u1EC3m)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container shadow-xl border border-gray-200\",\n      style: {\n        height: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: MAP_CONTAINER_STYLE,\n        center: DEFAULT_CENTER,\n        zoom: 12,\n        onLoad: onMapLoad,\n        children: [directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n          directions: directions,\n          options: {\n            polylineOptions: {\n              strokeColor: '#10B981',\n              strokeWeight: 6\n            },\n            // Màu xanh lá cây đậm\n            suppressMarkers: false // Mặc định DirectionsRenderer sẽ tạo markers A, B, C...\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this), !directions && filteredStores.map(store => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: Number(store.latitude),\n            lng: Number(store.longitude)\n          },\n          onClick: () => setSelectedStore(store)\n        }, store.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)), selectedStore && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: Number(selectedStore.latitude),\n            lng: Number(selectedStore.longitude)\n          },\n          onCloseClick: () => setSelectedStore(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-semibold text-blue-800\",\n              children: selectedStore.store_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address text-xs text-gray-700\",\n              children: selectedStore.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"board-name text-xs font-medium text-gray-600 mb-2\",\n              children: [\"BOARD: \", selectedStore.board_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              \"aria-label\": `Xem ${selectedStore.store_code} trên Google Maps`,\n              className: \"block mt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-500 hover:bg-blue-600 text-white text-xs font-semibold py-1 px-2 rounded w-full transition duration-150\",\n                children: \"Xem tr\\xEAn Google Maps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(StoreMapPage, \"aTrBIMvnld8FDFmcZ4bVyQl+VEw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = StoreMapPage;\nexport default _c2 = /*#__PURE__*/memo(StoreMapPage);\nvar _c, _c2;\n$RefreshReg$(_c, \"StoreMapPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","useState","useMemo","useRef","useEffect","GoogleMap","useJsApiLoader","InfoWindow","Marker","DirectionsRenderer","FilterBar","api","provinces","districtMap","jsxDEV","_jsxDEV","DEFAULT_CENTER","lat","lng","MAP_CONTAINER_STYLE","width","height","borderRadius","StoreMapPage","_s","stores","setStores","campaigns","setCampaigns","campaignStores","setCampaignStores","selectedStore","setSelectedStore","directions","setDirections","filterValues","setFilterValues","board","campaign","district","districtRaw","mapRef","isLoaded","loadError","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","fetchData","resStores","resCampaigns","resCampaignStores","Promise","all","get","data","err","console","error","onMapLoad","map","current","handleReset","setCenter","setZoom","boardOptions","Set","s","board_name","sort","filters","baseFilters","name","label","type","options","value","c","p","_districtMap$filterVa","push","d","handleFilterChange","prev","filteredStores","filter","store","boardMatch","districtMatch","districtRawMatch","district_raw","campaignMatch","some","cs","String","campaign_id","store_id","calculateRoute","storesToVisit","length","warn","storeLocations","Number","latitude","longitude","origin","destination","waypoints","slice","loc","location","stopover","directionsService","window","google","maps","DirectionsService","route","optimizeWaypoints","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","style","color","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","values","onChange","onClick","disabled","mapContainerStyle","center","zoom","onLoad","polylineOptions","strokeColor","strokeWeight","suppressMarkers","position","onCloseClick","store_code","address","href","target","rel","_c","_c2","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/pages/StoreMapPage.js"],"sourcesContent":["import React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker, DirectionsRenderer } from \"@react-google-maps/api\";\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport api from \"../services/api\";\r\nimport { provinces, districtMap } from \"../constants/locationData\";\r\n\r\nconst DEFAULT_CENTER = { lat: 10.7769, lng: 106.7009 }; // TP. HCM\r\nconst MAP_CONTAINER_STYLE = { width: \"100%\", height: \"600px\", borderRadius: \"8px\" }; // Đặt chiều cao cố định cho bản đồ\r\n\r\nfunction StoreMapPage() {\r\n  const [stores, setStores] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [campaignStores, setCampaignStores] = useState([]);\r\n\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n  \r\n  // State mới để lưu trữ kết quả lộ trình\r\n  const [directions, setDirections] = useState(null); \r\n\r\n  const [filterValues, setFilterValues] = useState({\r\n    board: \"all\",\r\n    campaign: \"all\",\r\n    district: \"all\",\r\n    districtRaw: \"all\",\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  // Load Google Maps\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  // Fetch data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([\r\n          api.get(\"/stores\"),\r\n          api.get(\"/campaigns\"),\r\n          api.get(\"/campaigns/campaign-stores\"),\r\n        ]);\r\n        setStores(resStores.data.data || []);\r\n        setCampaigns(resCampaigns.data.data || []);\r\n        setCampaignStores(resCampaignStores.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onMapLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilterValues({ board: \"all\", campaign: \"all\", district: \"all\", districtRaw: \"all\" });\r\n    setSelectedStore(null);\r\n    setDirections(null); // Reset lộ trình\r\n    if (mapRef.current) {\r\n      mapRef.current.setCenter(DEFAULT_CENTER);\r\n      mapRef.current.setZoom(12);\r\n    }\r\n  };\r\n\r\n  const boardOptions = useMemo(() => [...new Set(stores.map((s) => s.board_name))].sort(), [stores]);\r\n\r\n  // Build filters dynamically\r\n  const filters = useMemo(() => {\r\n    const baseFilters = [\r\n      { name: \"board\", label: \"Chain\", type: \"select\", options: [\"Tất cả\", ...boardOptions] },\r\n      {\r\n        name: \"campaign\",\r\n        label: \"Campaign\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...campaigns.map(c => ({ value: c.id, label: c.name }))],\r\n      },\r\n      {\r\n        name: \"district\",\r\n        label: \"Provinces\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...provinces.map(p => ({ value: p.value, label: p.label }))],\r\n      },\r\n    ];\r\n\r\n    // Quận/Huyện chỉ hiện khi đã chọn tỉnh\r\n    if (filterValues.district !== \"all\") {\r\n      baseFilters.push({\r\n        name: \"districtRaw\",\r\n        label: \"District\",\r\n        type: \"select\",\r\n        options: [\r\n          { value: \"all\", label: \"Tất cả\" },\r\n          ...(districtMap[filterValues.district]?.map(d => ({ value: d.value, label: d.label })) || []),\r\n        ],\r\n      });\r\n    }\r\n\r\n    return baseFilters;\r\n  }, [boardOptions, campaigns, filterValues.district]);\r\n\r\n  const handleFilterChange = (name, value) => {\r\n    // Reset lộ trình khi thay đổi bộ lọc\r\n    setDirections(null); \r\n    setSelectedStore(null); \r\n\r\n    setFilterValues(prev => {\r\n      if (name === \"district\") return { ...prev, district: value, districtRaw: \"all\" };\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const filteredStores = useMemo(() => {\r\n    return stores.filter(store => {\r\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\r\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\r\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\r\n      const campaignMatch =\r\n        filterValues.campaign === \"all\" ||\r\n        campaignStores.some(\r\n          cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id)\r\n        );\r\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\r\n    });\r\n  }, [stores, filterValues, campaignStores]);\r\n\r\n  // --- Hàm tính toán Lộ Trình ---\r\n  const calculateRoute = (storesToVisit) => {\r\n    // 1. Kiểm tra số lượng cửa hàng\r\n    if (storesToVisit.length < 2) {\r\n      setDirections(null);\r\n      // Hiển thị thông báo thay vì alert\r\n      console.warn(\"Cần ít nhất 2 cửa hàng để tạo lộ trình.\");\r\n      return;\r\n    }\r\n\r\n    // 2. Chuẩn bị dữ liệu\r\n    const storeLocations = storesToVisit.map(store => ({\r\n        lat: Number(store.latitude),\r\n        lng: Number(store.longitude),\r\n    }));\r\n\r\n    // Điểm đầu và điểm cuối\r\n    const origin = storeLocations[0];\r\n    const destination = storeLocations[storeLocations.length - 1];\r\n    \r\n    // Các điểm trung gian (không bao gồm điểm đầu và điểm cuối)\r\n    const waypoints = storeLocations.slice(1, -1).map(loc => ({\r\n        location: loc,\r\n        stopover: true // Đánh dấu đây là điểm dừng\r\n    }));\r\n\r\n    // 3. Gọi Directions Service\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    directionsService.route(\r\n        {\r\n            origin: origin,\r\n            destination: destination,\r\n            waypoints: waypoints,\r\n            optimizeWaypoints: true, // Yêu cầu tối ưu hóa thứ tự các điểm dừng\r\n            travelMode: window.google.maps.TravelMode.DRIVING, // Chế độ lái xe\r\n        },\r\n        (result, status) => {\r\n            if (status === window.google.maps.DirectionsStatus.OK) {\r\n                setDirections(result);\r\n            } else {\r\n                setDirections(null);\r\n                console.error(\"Yêu cầu lộ trình thất bại:\", status);\r\n                // Bạn có thể hiển thị một message box tùy chỉnh ở đây\r\n            }\r\n        }\r\n    );\r\n  };\r\n  // --- Kết thúc hàm tính toán Lộ Trình ---\r\n\r\n\r\n  if (loadError) return <div style={{ color: \"red\" }}>Lỗi khi tải Google Maps: {loadError.message}</div>;\r\n  if (!isLoaded) return <div>Đang tải bản đồ...</div>;\r\n\r\n  return (\r\n    <div className=\"container p-4\">\r\n      <div className=\"page-header mb-4\">\r\n        <h2 className=\"page-title text-2xl font-bold\">Bản Đồ Cửa Hàng & Lộ Trình</h2>\r\n      </div>\r\n\r\n      <FilterBar filters={filters} values={filterValues} onChange={handleFilterChange} />\r\n      \r\n      <div className=\"flex gap-4 mt-4 mb-4\">\r\n        <button className=\"btn btn-primary btn-lg\" onClick={handleReset}>\r\n            Đặt Lại Bộ Lọc & Bản Đồ\r\n        </button>\r\n        <button \r\n            className=\"btn btn-success btn-lg\" \r\n            onClick={() => calculateRoute(filteredStores)}\r\n            disabled={filteredStores.length < 2} // Vô hiệu hóa nếu ít hơn 2 điểm\r\n        >\r\n            Tính Lộ Trình Tối Ưu ({filteredStores.length} Điểm)\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"map-container shadow-xl border border-gray-200\" style={{ height: '600px' }}>\r\n        <GoogleMap\r\n          mapContainerStyle={MAP_CONTAINER_STYLE}\r\n          center={DEFAULT_CENTER}\r\n          zoom={12}\r\n          onLoad={onMapLoad}\r\n        >\r\n            {/* 1. Hiển thị Lộ Trình nếu đã tính toán */}\r\n            {directions && (\r\n                <DirectionsRenderer \r\n                    directions={directions} \r\n                    options={{ \r\n                        polylineOptions: { strokeColor: '#10B981', strokeWeight: 6 }, // Màu xanh lá cây đậm\r\n                        suppressMarkers: false // Mặc định DirectionsRenderer sẽ tạo markers A, B, C...\r\n                    }} \r\n                />\r\n            )}\r\n\r\n            {/* 2. Hiển thị Markers (chỉ khi không có lộ trình) */}\r\n            {!directions && filteredStores.map(store => (\r\n              <Marker\r\n                key={store.id}\r\n                position={{ lat: Number(store.latitude), lng: Number(store.longitude) }}\r\n                onClick={() => setSelectedStore(store)}\r\n              />\r\n            ))}\r\n\r\n            {/* 3. InfoWindow (Popup thông tin) */}\r\n            {selectedStore && (\r\n              <InfoWindow\r\n                position={{ lat: Number(selectedStore.latitude), lng: Number(selectedStore.longitude) }}\r\n                onCloseClick={() => setSelectedStore(null)}\r\n              >\r\n                <div className=\"map-popup\">\r\n                  {/* The Store Code as the primary title/identifier */}\r\n                  <h3 className=\"text-sm font-semibold text-blue-800\">{selectedStore.store_code}</h3>\r\n                  \r\n                  {/* Store Details */}\r\n                  <p className=\"address text-xs text-gray-700\">{selectedStore.address}</p>\r\n                  <p className=\"board-name text-xs font-medium text-gray-600 mb-2\">BOARD: {selectedStore.board_name}</p>\r\n\r\n                  {/* Google Maps Link and Button */}\r\n                  <a \r\n                    href={`https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`}\r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    aria-label={`Xem ${selectedStore.store_code} trên Google Maps`}\r\n                    className=\"block mt-2\"\r\n                  >\r\n                    <button className=\"bg-blue-500 hover:bg-blue-600 text-white text-xs font-semibold py-1 px-2 rounded w-full transition duration-150\">\r\n                      Xem trên Google Maps\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n              </InfoWindow>\r\n            )}\r\n        </GoogleMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(StoreMapPage);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}