{"ast":null,"code":"import _objectSpread from\"E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{memo,useState,useMemo,useRef,useEffect}from\"react\";import{GoogleMap,useJsApiLoader,InfoWindow,Marker}from\"@react-google-maps/api\";import FilterBar from\"../components/FilterBar\";import api from\"../services/api\";import{provinces,districtMap}from\"../constants/locationData\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DEFAULT_CENTER={lat:10.7769,lng:106.7009};const MAP_CONTAINER_STYLE={width:\"100%\",height:\"100%\",borderRadius:\"8px\"};function StoreMapPage(){const[stores,setStores]=useState([]);const[campaigns,setCampaigns]=useState([]);const[campaignStores,setCampaignStores]=useState([]);const[selectedStore,setSelectedStore]=useState(null);const[filterValues,setFilterValues]=useState({board:\"all\",campaign:\"all\",district:\"all\",districtRaw:\"all\"});const mapRef=useRef(null);// Load Google Maps\nconst{isLoaded,loadError}=useJsApiLoader({id:\"google-map-script\",googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY});// Fetch data\nuseEffect(()=>{const fetchData=async()=>{try{const[resStores,resCampaigns,resCampaignStores]=await Promise.all([api.get(\"/stores\"),api.get(\"/campaigns\"),api.get(\"/campaigns/campaign-stores\")]);setStores(resStores.data.data||[]);setCampaigns(resCampaigns.data.data||[]);setCampaignStores(resCampaignStores.data.data||[]);}catch(err){console.error(\"Failed to load data:\",err);}};fetchData();},[]);const onMapLoad=map=>{mapRef.current=map;};const handleReset=()=>{setFilterValues({board:\"all\",campaign:\"all\",district:\"all\",districtRaw:\"all\"});setSelectedStore(null);if(mapRef.current){mapRef.current.setCenter(DEFAULT_CENTER);mapRef.current.setZoom(12);}};const boardOptions=useMemo(()=>[...new Set(stores.map(s=>s.board_name))].sort(),[stores]);// Build filters dynamically\nconst filters=useMemo(()=>{const baseFilters=[{name:\"board\",label:\"Chain\",type:\"select\",options:[\"Tất cả\",...boardOptions]},{name:\"campaign\",label:\"Campaign\",type:\"select\",options:[{value:\"all\",label:\"Tất cả\"},...campaigns.map(c=>({value:c.id,label:c.name}))]},{name:\"district\",label:\"Provinces\",type:\"select\",options:[{value:\"all\",label:\"Tất cả\"},...provinces.map(p=>({value:p.value,label:p.label}))]}];// Quận/Huyện chỉ hiện khi đã chọn tỉnh\nif(filterValues.district!==\"all\"){var _districtMap$filterVa;baseFilters.push({name:\"districtRaw\",label:\"District\",type:\"select\",options:[{value:\"all\",label:\"Tất cả\"},...(((_districtMap$filterVa=districtMap[filterValues.district])===null||_districtMap$filterVa===void 0?void 0:_districtMap$filterVa.map(d=>({value:d.value,label:d.label})))||[])]});}return baseFilters;},[boardOptions,campaigns,filterValues.district]);const handleFilterChange=(name,value)=>{setFilterValues(prev=>{if(name===\"district\")return _objectSpread(_objectSpread({},prev),{},{district:value,districtRaw:\"all\"});return _objectSpread(_objectSpread({},prev),{},{[name]:value});});};const filteredStores=useMemo(()=>{return stores.filter(store=>{const boardMatch=filterValues.board===\"all\"||store.board_name===filterValues.board;const districtMatch=filterValues.district===\"all\"||store.district===filterValues.district;const districtRawMatch=filterValues.districtRaw===\"all\"||store.district_raw===filterValues.districtRaw;const campaignMatch=filterValues.campaign===\"all\"||campaignStores.some(cs=>String(cs.campaign_id)===String(filterValues.campaign)&&String(cs.store_id)===String(store.id));return boardMatch&&districtMatch&&districtRawMatch&&campaignMatch;});},[stores,filterValues,campaignStores]);if(loadError)return/*#__PURE__*/_jsxs(\"div\",{style:{color:\"red\"},children:[\"Error loading Google Maps: \",loadError.message]});if(!isLoaded)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading Map...\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"page-header\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"page-title\",children:\"Store Map\"})}),/*#__PURE__*/_jsx(FilterBar,{filters:filters,values:filterValues,onChange:handleFilterChange}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-lg mt-2\",onClick:handleReset,children:\"Reset\"}),/*#__PURE__*/_jsx(\"div\",{className:\"map-container\",children:/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:MAP_CONTAINER_STYLE,center:DEFAULT_CENTER,zoom:12,onLoad:onMapLoad,children:[filteredStores.map(store=>/*#__PURE__*/_jsx(Marker,{position:{lat:Number(store.latitude),lng:Number(store.longitude)},onClick:()=>setSelectedStore(store)},store.id)),selectedStore&&/*#__PURE__*/_jsx(InfoWindow,{position:{lat:Number(selectedStore.latitude),lng:Number(selectedStore.longitude)},onCloseClick:()=>setSelectedStore(null),children:/*#__PURE__*/_jsxs(\"div\",{className:\"map-popup\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedStore.store_code}),/*#__PURE__*/_jsx(\"p\",{className:\"address\",children:selectedStore.address}),/*#__PURE__*/_jsxs(\"p\",{className:\"board-name\",children:[\"BOARD: \",selectedStore.board_name]}),/*#__PURE__*/_jsx(\"a\",{href:\"https://maps.google.com/?q=\".concat(selectedStore.latitude,\",\").concat(selectedStore.longitude),target:\"_blank\",rel:\"noopener noreferrer\",\"aria-label\":\"View \".concat(selectedStore.store_code,\" on Google Maps\"),className:\"btn btn-outline btn-sm\",children:\"View on Google Maps\"})]})})]})})]});}export default/*#__PURE__*/memo(StoreMapPage);","map":{"version":3,"names":["React","memo","useState","useMemo","useRef","useEffect","GoogleMap","useJsApiLoader","InfoWindow","Marker","FilterBar","api","provinces","districtMap","jsxs","_jsxs","jsx","_jsx","DEFAULT_CENTER","lat","lng","MAP_CONTAINER_STYLE","width","height","borderRadius","StoreMapPage","stores","setStores","campaigns","setCampaigns","campaignStores","setCampaignStores","selectedStore","setSelectedStore","filterValues","setFilterValues","board","campaign","district","districtRaw","mapRef","isLoaded","loadError","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","fetchData","resStores","resCampaigns","resCampaignStores","Promise","all","get","data","err","console","error","onMapLoad","map","current","handleReset","setCenter","setZoom","boardOptions","Set","s","board_name","sort","filters","baseFilters","name","label","type","options","value","c","p","_districtMap$filterVa","push","d","handleFilterChange","prev","_objectSpread","filteredStores","filter","store","boardMatch","districtMatch","districtRawMatch","district_raw","campaignMatch","some","cs","String","campaign_id","store_id","style","color","children","message","className","values","onChange","onClick","mapContainerStyle","center","zoom","onLoad","position","Number","latitude","longitude","onCloseClick","store_code","address","href","concat","target","rel"],"sources":["E:/5.FILE LINH TINH/CODESPACE/prowtech-app/frontend-web/src/pages/StoreMapPage.js"],"sourcesContent":["import React, { memo, useState, useMemo, useRef, useEffect } from \"react\";\r\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from \"@react-google-maps/api\";\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport api from \"../services/api\";\r\nimport { provinces, districtMap } from \"../constants/locationData\";\r\n\r\nconst DEFAULT_CENTER = { lat: 10.7769, lng: 106.7009 };\r\nconst MAP_CONTAINER_STYLE = { width: \"100%\", height: \"100%\", borderRadius: \"8px\" };\r\n\r\nfunction StoreMapPage() {\r\n  const [stores, setStores] = useState([]);\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [campaignStores, setCampaignStores] = useState([]);\r\n\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  const [filterValues, setFilterValues] = useState({\r\n    board: \"all\",\r\n    campaign: \"all\",\r\n    district: \"all\",\r\n    districtRaw: \"all\",\r\n  });\r\n\r\n  const mapRef = useRef(null);\r\n\r\n  // Load Google Maps\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  // Fetch data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [resStores, resCampaigns, resCampaignStores] = await Promise.all([\r\n          api.get(\"/stores\"),\r\n          api.get(\"/campaigns\"),\r\n          api.get(\"/campaigns/campaign-stores\"),\r\n        ]);\r\n        setStores(resStores.data.data || []);\r\n        setCampaigns(resCampaigns.data.data || []);\r\n        setCampaignStores(resCampaignStores.data.data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onMapLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilterValues({ board: \"all\", campaign: \"all\", district: \"all\", districtRaw: \"all\" });\r\n    setSelectedStore(null);\r\n    if (mapRef.current) {\r\n      mapRef.current.setCenter(DEFAULT_CENTER);\r\n      mapRef.current.setZoom(12);\r\n    }\r\n  };\r\n\r\n  const boardOptions = useMemo(() => [...new Set(stores.map((s) => s.board_name))].sort(), [stores]);\r\n\r\n  // Build filters dynamically\r\n  const filters = useMemo(() => {\r\n    const baseFilters = [\r\n      { name: \"board\", label: \"Chain\", type: \"select\", options: [\"Tất cả\", ...boardOptions] },\r\n      {\r\n        name: \"campaign\",\r\n        label: \"Campaign\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...campaigns.map(c => ({ value: c.id, label: c.name }))],\r\n      },\r\n      {\r\n        name: \"district\",\r\n        label: \"Provinces\",\r\n        type: \"select\",\r\n        options: [{ value: \"all\", label: \"Tất cả\" }, ...provinces.map(p => ({ value: p.value, label: p.label }))],\r\n      },\r\n    ];\r\n\r\n    // Quận/Huyện chỉ hiện khi đã chọn tỉnh\r\n    if (filterValues.district !== \"all\") {\r\n      baseFilters.push({\r\n        name: \"districtRaw\",\r\n        label: \"District\",\r\n        type: \"select\",\r\n        options: [\r\n          { value: \"all\", label: \"Tất cả\" },\r\n          ...(districtMap[filterValues.district]?.map(d => ({ value: d.value, label: d.label })) || []),\r\n        ],\r\n      });\r\n    }\r\n\r\n    return baseFilters;\r\n  }, [boardOptions, campaigns, filterValues.district]);\r\n\r\n  const handleFilterChange = (name, value) => {\r\n    setFilterValues(prev => {\r\n      if (name === \"district\") return { ...prev, district: value, districtRaw: \"all\" };\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const filteredStores = useMemo(() => {\r\n    return stores.filter(store => {\r\n      const boardMatch = filterValues.board === \"all\" || store.board_name === filterValues.board;\r\n      const districtMatch = filterValues.district === \"all\" || store.district === filterValues.district;\r\n      const districtRawMatch = filterValues.districtRaw === \"all\" || store.district_raw === filterValues.districtRaw;\r\n      const campaignMatch =\r\n        filterValues.campaign === \"all\" ||\r\n        campaignStores.some(\r\n          cs => String(cs.campaign_id) === String(filterValues.campaign) && String(cs.store_id) === String(store.id)\r\n        );\r\n      return boardMatch && districtMatch && districtRawMatch && campaignMatch;\r\n    });\r\n  }, [stores, filterValues, campaignStores]);\r\n\r\n  if (loadError) return <div style={{ color: \"red\" }}>Error loading Google Maps: {loadError.message}</div>;\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"page-title\">Store Map</h2>\r\n      </div>\r\n\r\n      <FilterBar filters={filters} values={filterValues} onChange={handleFilterChange} />\r\n      <button className=\"btn btn-primary btn-lg mt-2\" onClick={handleReset}>Reset</button>\r\n\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={MAP_CONTAINER_STYLE}\r\n          center={DEFAULT_CENTER}\r\n          zoom={12}\r\n          onLoad={onMapLoad}\r\n        >\r\n          {filteredStores.map(store => (\r\n            <Marker\r\n              key={store.id}\r\n              position={{ lat: Number(store.latitude), lng: Number(store.longitude) }}\r\n              onClick={() => setSelectedStore(store)}\r\n            />\r\n          ))}\r\n\r\n          {selectedStore && (\r\n            <InfoWindow\r\n              position={{ lat: Number(selectedStore.latitude), lng: Number(selectedStore.longitude) }}\r\n              onCloseClick={() => setSelectedStore(null)}\r\n            >\r\n            <div className=\"map-popup\">\r\n              {/* The Store Code as the primary title/identifier */}\r\n              <h3>{selectedStore.store_code}</h3>\r\n              \r\n              {/* Store Details */}\r\n              <p className=\"address\">{selectedStore.address}</p>\r\n              <p className=\"board-name\">BOARD: {selectedStore.board_name}</p>\r\n\r\n              {/* Corrected Google Maps Link and Button */}\r\n              <a \r\n                href={`https://maps.google.com/?q=${selectedStore.latitude},${selectedStore.longitude}`}\r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n                aria-label={`View ${selectedStore.store_code} on Google Maps`}\r\n                className=\"btn btn-outline btn-sm\"\r\n              >\r\n                  View on Google Maps\r\n              </a>\r\n            </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(StoreMapPage);\r\n"],"mappings":"4IAAA,MAAO,CAAAA,KAAK,EAAIC,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CACzE,OAASC,SAAS,CAAEC,cAAc,CAAEC,UAAU,CAAEC,MAAM,KAAQ,wBAAwB,CACtF,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,SAAS,CAAEC,WAAW,KAAQ,2BAA2B,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,cAAc,CAAG,CAAEC,GAAG,CAAE,OAAO,CAAEC,GAAG,CAAE,QAAS,CAAC,CACtD,KAAM,CAAAC,mBAAmB,CAAG,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAM,CAAEC,YAAY,CAAE,KAAM,CAAC,CAElF,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CAExD,KAAM,CAAC8B,aAAa,CAAEC,gBAAgB,CAAC,CAAG/B,QAAQ,CAAC,IAAI,CAAC,CAExD,KAAM,CAACgC,YAAY,CAAEC,eAAe,CAAC,CAAGjC,QAAQ,CAAC,CAC/CkC,KAAK,CAAE,KAAK,CACZC,QAAQ,CAAE,KAAK,CACfC,QAAQ,CAAE,KAAK,CACfC,WAAW,CAAE,KACf,CAAC,CAAC,CAEF,KAAM,CAAAC,MAAM,CAAGpC,MAAM,CAAC,IAAI,CAAC,CAE3B;AACA,KAAM,CAAEqC,QAAQ,CAAEC,SAAU,CAAC,CAAGnC,cAAc,CAAC,CAC7CoC,EAAE,CAAE,mBAAmB,CACvBC,gBAAgB,CAAEC,OAAO,CAACC,GAAG,CAACC,6BAChC,CAAC,CAAC,CAEF;AACA1C,SAAS,CAAC,IAAM,CACd,KAAM,CAAA2C,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAEC,iBAAiB,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACrE1C,GAAG,CAAC2C,GAAG,CAAC,SAAS,CAAC,CAClB3C,GAAG,CAAC2C,GAAG,CAAC,YAAY,CAAC,CACrB3C,GAAG,CAAC2C,GAAG,CAAC,4BAA4B,CAAC,CACtC,CAAC,CACF3B,SAAS,CAACsB,SAAS,CAACM,IAAI,CAACA,IAAI,EAAI,EAAE,CAAC,CACpC1B,YAAY,CAACqB,YAAY,CAACK,IAAI,CAACA,IAAI,EAAI,EAAE,CAAC,CAC1CxB,iBAAiB,CAACoB,iBAAiB,CAACI,IAAI,CAACA,IAAI,EAAI,EAAE,CAAC,CACtD,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAEF,GAAG,CAAC,CAC5C,CACF,CAAC,CACDR,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAW,SAAS,CAAIC,GAAG,EAAK,CACzBpB,MAAM,CAACqB,OAAO,CAAGD,GAAG,CACtB,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACxB3B,eAAe,CAAC,CAAEC,KAAK,CAAE,KAAK,CAAEC,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,KAAK,CAAEC,WAAW,CAAE,KAAM,CAAC,CAAC,CACvFN,gBAAgB,CAAC,IAAI,CAAC,CACtB,GAAIO,MAAM,CAACqB,OAAO,CAAE,CAClBrB,MAAM,CAACqB,OAAO,CAACE,SAAS,CAAC7C,cAAc,CAAC,CACxCsB,MAAM,CAACqB,OAAO,CAACG,OAAO,CAAC,EAAE,CAAC,CAC5B,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG9D,OAAO,CAAC,IAAM,CAAC,GAAG,GAAI,CAAA+D,GAAG,CAACxC,MAAM,CAACkC,GAAG,CAAEO,CAAC,EAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAE,CAAC3C,MAAM,CAAC,CAAC,CAElG;AACA,KAAM,CAAA4C,OAAO,CAAGnE,OAAO,CAAC,IAAM,CAC5B,KAAM,CAAAoE,WAAW,CAAG,CAClB,CAAEC,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAE,OAAO,CAAEC,IAAI,CAAE,QAAQ,CAAEC,OAAO,CAAE,CAAC,QAAQ,CAAE,GAAGV,YAAY,CAAE,CAAC,CACvF,CACEO,IAAI,CAAE,UAAU,CAChBC,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,KAAK,CAAEH,KAAK,CAAE,QAAS,CAAC,CAAE,GAAG7C,SAAS,CAACgC,GAAG,CAACiB,CAAC,GAAK,CAAED,KAAK,CAAEC,CAAC,CAAClC,EAAE,CAAE8B,KAAK,CAAEI,CAAC,CAACL,IAAK,CAAC,CAAC,CAAC,CACtG,CAAC,CACD,CACEA,IAAI,CAAE,UAAU,CAChBC,KAAK,CAAE,WAAW,CAClBC,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,KAAK,CAAEH,KAAK,CAAE,QAAS,CAAC,CAAE,GAAG7D,SAAS,CAACgD,GAAG,CAACkB,CAAC,GAAK,CAAEF,KAAK,CAAEE,CAAC,CAACF,KAAK,CAAEH,KAAK,CAAEK,CAAC,CAACL,KAAM,CAAC,CAAC,CAAC,CAC1G,CAAC,CACF,CAED;AACA,GAAIvC,YAAY,CAACI,QAAQ,GAAK,KAAK,CAAE,KAAAyC,qBAAA,CACnCR,WAAW,CAACS,IAAI,CAAC,CACfR,IAAI,CAAE,aAAa,CACnBC,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAE,CACP,CAAEC,KAAK,CAAE,KAAK,CAAEH,KAAK,CAAE,QAAS,CAAC,CACjC,IAAI,EAAAM,qBAAA,CAAAlE,WAAW,CAACqB,YAAY,CAACI,QAAQ,CAAC,UAAAyC,qBAAA,iBAAlCA,qBAAA,CAAoCnB,GAAG,CAACqB,CAAC,GAAK,CAAEL,KAAK,CAAEK,CAAC,CAACL,KAAK,CAAEH,KAAK,CAAEQ,CAAC,CAACR,KAAM,CAAC,CAAC,CAAC,GAAI,EAAE,CAAC,CAEjG,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAF,WAAW,CACpB,CAAC,CAAE,CAACN,YAAY,CAAErC,SAAS,CAAEM,YAAY,CAACI,QAAQ,CAAC,CAAC,CAEpD,KAAM,CAAA4C,kBAAkB,CAAGA,CAACV,IAAI,CAAEI,KAAK,GAAK,CAC1CzC,eAAe,CAACgD,IAAI,EAAI,CACtB,GAAIX,IAAI,GAAK,UAAU,CAAE,OAAAY,aAAA,CAAAA,aAAA,IAAYD,IAAI,MAAE7C,QAAQ,CAAEsC,KAAK,CAAErC,WAAW,CAAE,KAAK,GAC9E,OAAA6C,aAAA,CAAAA,aAAA,IAAYD,IAAI,MAAE,CAACX,IAAI,EAAGI,KAAK,GACjC,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAS,cAAc,CAAGlF,OAAO,CAAC,IAAM,CACnC,MAAO,CAAAuB,MAAM,CAAC4D,MAAM,CAACC,KAAK,EAAI,CAC5B,KAAM,CAAAC,UAAU,CAAGtD,YAAY,CAACE,KAAK,GAAK,KAAK,EAAImD,KAAK,CAACnB,UAAU,GAAKlC,YAAY,CAACE,KAAK,CAC1F,KAAM,CAAAqD,aAAa,CAAGvD,YAAY,CAACI,QAAQ,GAAK,KAAK,EAAIiD,KAAK,CAACjD,QAAQ,GAAKJ,YAAY,CAACI,QAAQ,CACjG,KAAM,CAAAoD,gBAAgB,CAAGxD,YAAY,CAACK,WAAW,GAAK,KAAK,EAAIgD,KAAK,CAACI,YAAY,GAAKzD,YAAY,CAACK,WAAW,CAC9G,KAAM,CAAAqD,aAAa,CACjB1D,YAAY,CAACG,QAAQ,GAAK,KAAK,EAC/BP,cAAc,CAAC+D,IAAI,CACjBC,EAAE,EAAIC,MAAM,CAACD,EAAE,CAACE,WAAW,CAAC,GAAKD,MAAM,CAAC7D,YAAY,CAACG,QAAQ,CAAC,EAAI0D,MAAM,CAACD,EAAE,CAACG,QAAQ,CAAC,GAAKF,MAAM,CAACR,KAAK,CAAC5C,EAAE,CAC3G,CAAC,CACH,MAAO,CAAA6C,UAAU,EAAIC,aAAa,EAAIC,gBAAgB,EAAIE,aAAa,CACzE,CAAC,CAAC,CACJ,CAAC,CAAE,CAAClE,MAAM,CAAEQ,YAAY,CAAEJ,cAAc,CAAC,CAAC,CAE1C,GAAIY,SAAS,CAAE,mBAAO3B,KAAA,QAAKmF,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAC,QAAA,EAAC,6BAA2B,CAAC1D,SAAS,CAAC2D,OAAO,EAAM,CAAC,CACxG,GAAI,CAAC5D,QAAQ,CAAE,mBAAOxB,IAAA,QAAAmF,QAAA,CAAK,gBAAc,CAAK,CAAC,CAE/C,mBACErF,KAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAF,QAAA,eACxBnF,IAAA,QAAKqF,SAAS,CAAC,aAAa,CAAAF,QAAA,cAC1BnF,IAAA,OAAIqF,SAAS,CAAC,YAAY,CAAAF,QAAA,CAAC,WAAS,CAAI,CAAC,CACtC,CAAC,cAENnF,IAAA,CAACP,SAAS,EAAC4D,OAAO,CAAEA,OAAQ,CAACiC,MAAM,CAAErE,YAAa,CAACsE,QAAQ,CAAEtB,kBAAmB,CAAE,CAAC,cACnFjE,IAAA,WAAQqF,SAAS,CAAC,6BAA6B,CAACG,OAAO,CAAE3C,WAAY,CAAAsC,QAAA,CAAC,OAAK,CAAQ,CAAC,cAEpFnF,IAAA,QAAKqF,SAAS,CAAC,eAAe,CAAAF,QAAA,cAC5BrF,KAAA,CAACT,SAAS,EACRoG,iBAAiB,CAAErF,mBAAoB,CACvCsF,MAAM,CAAEzF,cAAe,CACvB0F,IAAI,CAAE,EAAG,CACTC,MAAM,CAAElD,SAAU,CAAAyC,QAAA,EAEjBf,cAAc,CAACzB,GAAG,CAAC2B,KAAK,eACvBtE,IAAA,CAACR,MAAM,EAELqG,QAAQ,CAAE,CAAE3F,GAAG,CAAE4F,MAAM,CAACxB,KAAK,CAACyB,QAAQ,CAAC,CAAE5F,GAAG,CAAE2F,MAAM,CAACxB,KAAK,CAAC0B,SAAS,CAAE,CAAE,CACxER,OAAO,CAAEA,CAAA,GAAMxE,gBAAgB,CAACsD,KAAK,CAAE,EAFlCA,KAAK,CAAC5C,EAGZ,CACF,CAAC,CAEDX,aAAa,eACZf,IAAA,CAACT,UAAU,EACTsG,QAAQ,CAAE,CAAE3F,GAAG,CAAE4F,MAAM,CAAC/E,aAAa,CAACgF,QAAQ,CAAC,CAAE5F,GAAG,CAAE2F,MAAM,CAAC/E,aAAa,CAACiF,SAAS,CAAE,CAAE,CACxFC,YAAY,CAAEA,CAAA,GAAMjF,gBAAgB,CAAC,IAAI,CAAE,CAAAmE,QAAA,cAE7CrF,KAAA,QAAKuF,SAAS,CAAC,WAAW,CAAAF,QAAA,eAExBnF,IAAA,OAAAmF,QAAA,CAAKpE,aAAa,CAACmF,UAAU,CAAK,CAAC,cAGnClG,IAAA,MAAGqF,SAAS,CAAC,SAAS,CAAAF,QAAA,CAAEpE,aAAa,CAACoF,OAAO,CAAI,CAAC,cAClDrG,KAAA,MAAGuF,SAAS,CAAC,YAAY,CAAAF,QAAA,EAAC,SAAO,CAACpE,aAAa,CAACoC,UAAU,EAAI,CAAC,cAG/DnD,IAAA,MACEoG,IAAI,+BAAAC,MAAA,CAAgCtF,aAAa,CAACgF,QAAQ,MAAAM,MAAA,CAAItF,aAAa,CAACiF,SAAS,CAAG,CACxFM,MAAM,CAAC,QAAQ,CACfC,GAAG,CAAC,qBAAqB,CACzB,qBAAAF,MAAA,CAAoBtF,aAAa,CAACmF,UAAU,mBAAkB,CAC9Db,SAAS,CAAC,wBAAwB,CAAAF,QAAA,CACnC,qBAED,CAAG,CAAC,EACD,CAAC,CACM,CACb,EACQ,CAAC,CACT,CAAC,EACH,CAAC,CAEV,CAEA,2BAAenG,IAAI,CAACwB,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}