{"ast":null,"code":"var _jsxFileName = \"E:\\\\5.FILE LINH TINH\\\\ProwtechMobileApp\\\\prowtech-app\\\\frontend-web\\\\src\\\\components\\\\StoresMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '600px',\n  borderRadius: '8px'\n};\n\n// Remove this line; use Marker from @react-google-maps/api instead\n\n// Tọa độ trung tâm mặc định (ví dụ: trung tâm TP.HCM)\nconst defaultCenter = {\n  lat: 10.7769,\n  lng: 106.7009\n};\nfunction StoresMap({\n  stores\n}) {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n\n  // State để lưu trữ cửa hàng đang được chọn (để hiện InfoWindow)\n  const [selectedStore, setSelectedStore] = useState(null);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    center: defaultCenter,\n    zoom: 12,\n    options: {\n      mapId: process.env.REACT_APP_GOOGLE_MAP_ID\n    },\n    children: [stores.map(store => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: parseFloat(store.latitude),\n        lng: parseFloat(store.longitude)\n      },\n      onClick: () => setSelectedStore(store)\n    }, store.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)), selectedStore && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(selectedStore.latitude),\n        lng: parseFloat(selectedStore.longitude)\n      },\n      onCloseClick: () => {\n        setSelectedStore(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedStore.display_name || selectedStore.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedStore.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(StoresMap, \"85O4o7AswjWwxLzRwyllXqxTRTA=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = StoresMap;\nexport default _c2 = /*#__PURE__*/React.memo(StoresMap);\nvar _c, _c2;\n$RefreshReg$(_c, \"StoresMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","GoogleMap","useJsApiLoader","InfoWindow","Marker","jsxDEV","_jsxDEV","mapContainerStyle","width","height","borderRadius","defaultCenter","lat","lng","StoresMap","stores","_s","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","selectedStore","setSelectedStore","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","options","mapId","REACT_APP_GOOGLE_MAP_ID","map","store","position","parseFloat","latitude","longitude","onClick","onCloseClick","display_name","name","address","_c","_c2","memo","$RefreshReg$"],"sources":["E:/5.FILE LINH TINH/ProwtechMobileApp/prowtech-app/frontend-web/src/components/StoresMap.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, InfoWindow, Marker } from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '600px',\r\n  borderRadius: '8px',\r\n};\r\n\r\n// Remove this line; use Marker from @react-google-maps/api instead\r\n\r\n// Tọa độ trung tâm mặc định (ví dụ: trung tâm TP.HCM)\r\nconst defaultCenter = {\r\n  lat: 10.7769,\r\n  lng: 106.7009\r\n};\r\n\r\nfunction StoresMap({ stores }) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\r\n  });\r\n\r\n  // State để lưu trữ cửa hàng đang được chọn (để hiện InfoWindow)\r\n  const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={defaultCenter}\r\n        zoom={12}\r\n        options={{ mapId: process.env.REACT_APP_GOOGLE_MAP_ID }}\r\n      >\r\n      {/* Lặp qua danh sách cửa hàng để hiển thị các Marker */}\r\n      {stores.map((store) => (\r\n      <Marker\r\n        key={store.id}\r\n        position={{\r\n          lat: parseFloat(store.latitude),\r\n          lng: parseFloat(store.longitude)\r\n        }}\r\n        onClick={() => setSelectedStore(store)}\r\n      />\r\n      ))}\r\n\r\n      {/* Nếu có một cửa hàng được chọn, hiển thị InfoWindow */}\r\n      {selectedStore && (\r\n        <InfoWindow\r\n          position={{\r\n            lat: parseFloat(selectedStore.latitude),\r\n            lng: parseFloat(selectedStore.longitude)\r\n          }}\r\n          onCloseClick={() => {\r\n            setSelectedStore(null);\r\n          }}\r\n        >\r\n          <div>\r\n            <h4>{selectedStore.display_name || selectedStore.name}</h4>\r\n            <p>{selectedStore.address}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default React.memo(StoresMap);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}